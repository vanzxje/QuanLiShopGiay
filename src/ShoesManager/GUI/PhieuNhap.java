package ShoesManager.GUI;

import ShoesManager.BUS.*;
import ShoesManager.DTO.*;
import java.awt.*;
import java.awt.event.*;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class PhieuNhap extends javax.swing.JFrame  implements MouseListener{

    public PhieuNhap() throws Exception {
        this.setUndecorated(true);

        init();
        initComponents();
        actionVisiblePanel();
        pThongTin_ThongTin.setVisible(true);
        // các hàm xử lý sau khi vào
        kiemTraCapBac();
        colordefault();
        anHienCacNut(false);
        
        // hiển thị các dữ liệu table
        actionButtondisplay();
        actionButtondisplayChiTiet();
        
        // cac su kien khac
        actionTFChiTiet();
        
        //chinh sua cac cbb
        nhapLuongNCC();
        
        //hien thi hoac an thanh menu
        if (!Memory.flag_Menu) {
            pTop.setVisible(false);
            menuThanhCongcu.setText("Hiện thanh công cụ");
        }
        
        // hiển thị rdbtn
        tfThongTin_MaNV.setText(Memory.maNV);
        
        tblThongTin.setAutoCreateRowSorter(true);
        tblThongTin1.setAutoCreateRowSorter(true);
    }
    
    private Color colorPanel_Top, colorPanel_Center, colorText;
    private JLabel[] listLblTop;
    private String[] strArr_Top;
    private PhieuNhapBUS list_PN;
    private ChiTietPNBUS list_ChiTietPN;
    private ChiTietKMBUS list_ChiTietKM;
    private SanPhamBUS list_SanPham;
    private DefaultTableModel model, modelChiTiet;
    private double TongTien;
    private PhieuNhapDTO phieunhap;
    private CacHamQuanTrong cachamquangtrong;
     /**
         * Ngày của hệ thống
         */
    private String date1 = LocalDateTime.now().getDayOfMonth() + " " +
                LocalDateTime.now().getMonth() + " " +
                LocalDateTime.now().getYear();
    
    public void init() throws Exception {
        colorPanel_Top = Memory.colorThemes;
        colorPanel_Center = Memory.colorThemes_2;
        colorText = Memory.colorText;
        
        cachamquangtrong = new CacHamQuanTrong();
        list_PN = new PhieuNhapBUS();
        list_ChiTietPN = new ChiTietPNBUS();
        list_ChiTietKM = new ChiTietKMBUS();
        list_SanPham = new SanPhamBUS();
        phieunhap = new PhieuNhapDTO();
        
        strArr_Top = new String[10];
        strArr_Top[0] = "Hóa đơn";
        strArr_Top[1] = "Khuyến mãi";
        strArr_Top[2] = "Nhập hàng";
        strArr_Top[3] = "Hàng hóa";
        strArr_Top[4] = "Thống kê";
        strArr_Top[5] = "Excel";
        strArr_Top[6] = "Trở về";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup_MauNen = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        pCenter = new javax.swing.JPanel();
        pThongTin = new javax.swing.JPanel();
        lblThongTin_ThongTin = new javax.swing.JLabel();
        lblThongTin_TimKiem = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblThongTin = new javax.swing.JTable();
        pThongTin_ThongTin = new javax.swing.JPanel();
        lblThongTin_MaPN = new javax.swing.JLabel();
        lblThongTin_MaNCC = new javax.swing.JLabel();
        lblThongTin_MaNV = new javax.swing.JLabel();
        lblThongTin_NgayNhap = new javax.swing.JLabel();
        lblThongTin_TongTien = new javax.swing.JLabel();
        btnThongTin_Them = new javax.swing.JButton();
        btnThongTin_Xoa = new javax.swing.JButton();
        tfThongTin_MaPN = new javax.swing.JTextField();
        tfThongTin_MaNV = new javax.swing.JTextField();
        tfThongTin_TongTien = new javax.swing.JTextField();
        calendarThongTin = new com.toedter.calendar.JDateChooser();
        btnThongTin_Sua1 = new javax.swing.JButton();
        btnThongTin_Trong = new javax.swing.JButton();
        cbbThongTin_MaNCC = new javax.swing.JComboBox<>();
        pThongTin_TimKiem = new javax.swing.JPanel();
        lblThongTin_MaKH1 = new javax.swing.JLabel();
        lblThongTin_TongTien1 = new javax.swing.JLabel();
        lblThongTin_MaHD1 = new javax.swing.JLabel();
        lblThongTin_MaNV1 = new javax.swing.JLabel();
        btnTimKiem_TimKiem = new javax.swing.JButton();
        btnTimKiem_HuyTimKiem = new javax.swing.JButton();
        tfTimKiem_MaPN1 = new javax.swing.JTextField();
        tfTimKiem_MaNCC1 = new javax.swing.JTextField();
        tfTimKiem_MaNV1 = new javax.swing.JTextField();
        tfTimKiem_TongTien1 = new javax.swing.JTextField();
        btnTimKiem_Trong1 = new javax.swing.JButton();
        pChiTiet = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblThongTin1 = new javax.swing.JTable();
        lblChiTiet_ChiTietHoaDon = new javax.swing.JLabel();
        pChiTietSanPham = new javax.swing.JPanel();
        lblChiTiet_SL = new javax.swing.JLabel();
        btnChiTiet_Xoa = new javax.swing.JButton();
        lblChiTiet_Gia = new javax.swing.JLabel();
        btnChiTiet_Sua = new javax.swing.JButton();
        tfChiTiet_MaSP = new javax.swing.JTextField();
        tfChiTiet_MaHD = new javax.swing.JTextField();
        tfChiTiet_SL = new javax.swing.JTextField();
        lblChiTiet_MaSP = new javax.swing.JLabel();
        tfChiTiet_Gia = new javax.swing.JTextField();
        lblChiTiet_MaHD = new javax.swing.JLabel();
        btnChiTiet_Them = new javax.swing.JButton();
        lblChiTiet_3cham = new javax.swing.JLabel();
        btnChiTiet_TaoMoi = new javax.swing.JButton();
        pChiTietTimKiem = new javax.swing.JPanel();
        lblChiTiet_SoLuong2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        tfChiTiet_MaSP2 = new javax.swing.JTextField();
        lblChiTiet_MaSP1 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        lblMuiTen = new javax.swing.JLabel();
        lblMuiTen1 = new javax.swing.JLabel();
        lblChiTiet_3cham1 = new javax.swing.JLabel();
        lblChiTiet_3cham2 = new javax.swing.JLabel();
        tfChiTiet_SL2 = new javax.swing.JTextField();
        tfChiTiet_SL3 = new javax.swing.JTextField();
        tfChiTiet_MaSP3 = new javax.swing.JTextField();
        lblChiTiet_Tatca = new javax.swing.JLabel();
        pTop = createPanel_LblTop(strArr_Top);
        menubar = new javax.swing.JMenuBar();
        menuTaiKhoan = new javax.swing.JMenu();
        menuTaiKhoan_ThongTin = new javax.swing.JMenuItem();
        menuTaiKhoan_DangXuat = new javax.swing.JMenuItem();
        menuThanhCongcu = new javax.swing.JMenu();
        MenuMauNen = new javax.swing.JMenu();
        rdbtnThongTin_MauCam = new javax.swing.JRadioButtonMenuItem();
        rdbtnThongTin_MauDen = new javax.swing.JRadioButtonMenuItem();
        rdbtnThongTin_Mautrang = new javax.swing.JRadioButtonMenuItem();
        menuTroVe = new javax.swing.JMenu();
        menuThoat = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        pCenter.setBackground(colorPanel_Center);
        pCenter.setPreferredSize(new java.awt.Dimension(1280, 600));

        pThongTin.setBackground(colorPanel_Center);
        pThongTin.setBorder(javax.swing.BorderFactory.createLineBorder(colorPanel_Top, 5));
        pThongTin.setPreferredSize(new java.awt.Dimension(340, 580));
        pThongTin.setVerifyInputWhenFocusTarget(false);

        lblThongTin_ThongTin.setBackground(new java.awt.Color(255, 255, 255));
        lblThongTin_ThongTin.setForeground(new java.awt.Color(255, 255, 255));
        lblThongTin_ThongTin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ShoesManager/images/Button Menu/210_70/Tìm kiếm.png"))); // NOI18N
        lblThongTin_ThongTin.setMaximumSize(new java.awt.Dimension(210, 131));
        lblThongTin_ThongTin.setMinimumSize(new java.awt.Dimension(210, 131));
        lblThongTin_ThongTin.setName("pThongTin_ThongTin"); // NOI18N
        lblThongTin_ThongTin.setPreferredSize(new java.awt.Dimension(210, 131));
        lblThongTin_ThongTin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblThongTin_ThongTinMouseReleased(evt);
            }
        });

        lblThongTin_TimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ShoesManager/images/Button Menu/210_70/Thông tin.png"))); // NOI18N
        lblThongTin_TimKiem.setName("pThongTin_TiemKiem"); // NOI18N
        lblThongTin_TimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblThongTin_TimKiemMouseReleased(evt);
            }
        });

        tblThongTin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã HĐ", "Mã KH", "Mã NV", "Mã KM", "Ngày Bán", "Tổng tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblThongTin.setGridColor(new java.awt.Color(102, 255, 102));
        tblThongTin.setSelectionBackground(new java.awt.Color(153, 153, 153));
        tblThongTin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblThongTinMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblThongTin);
        if (tblThongTin.getColumnModel().getColumnCount() > 0) {
            tblThongTin.getColumnModel().getColumn(0).setPreferredWidth(60);
            tblThongTin.getColumnModel().getColumn(0).setHeaderValue("Mã HĐ");
            tblThongTin.getColumnModel().getColumn(1).setPreferredWidth(60);
            tblThongTin.getColumnModel().getColumn(1).setHeaderValue("Mã KH");
            tblThongTin.getColumnModel().getColumn(2).setPreferredWidth(60);
            tblThongTin.getColumnModel().getColumn(2).setHeaderValue("Mã NV");
            tblThongTin.getColumnModel().getColumn(3).setPreferredWidth(60);
            tblThongTin.getColumnModel().getColumn(3).setHeaderValue("Mã KM");
            tblThongTin.getColumnModel().getColumn(4).setPreferredWidth(90);
            tblThongTin.getColumnModel().getColumn(4).setHeaderValue("Ngày Bán");
            tblThongTin.getColumnModel().getColumn(5).setPreferredWidth(90);
            tblThongTin.getColumnModel().getColumn(5).setHeaderValue("Tổng tiền");
        }

        pThongTin_ThongTin.setBackground(colorPanel_Center);
        pThongTin_ThongTin.setPreferredSize(new java.awt.Dimension(405, 280));

        lblThongTin_MaPN.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblThongTin_MaPN.setForeground(colorText);
        lblThongTin_MaPN.setText("Mã phiếu nhập");

        lblThongTin_MaNCC.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblThongTin_MaNCC.setForeground(colorText);
        lblThongTin_MaNCC.setText("Mã nhà cung cấp");

        lblThongTin_MaNV.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblThongTin_MaNV.setForeground(colorText);
        lblThongTin_MaNV.setText("Mã nhân viên");

        lblThongTin_NgayNhap.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblThongTin_NgayNhap.setForeground(colorText);
        lblThongTin_NgayNhap.setText("Ngày nhập");

        lblThongTin_TongTien.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblThongTin_TongTien.setForeground(colorText);
        lblThongTin_TongTien.setText("Tổng tiền");

        btnThongTin_Them.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnThongTin_Them.setText("Thêm");
        btnThongTin_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongTin_ThemActionPerformed(evt);
            }
        });

        btnThongTin_Xoa.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnThongTin_Xoa.setText("Xóa");
        btnThongTin_Xoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThongTin_XoaMouseClicked(evt);
            }
        });

        tfThongTin_MaPN.setEditable(false);
        tfThongTin_MaPN.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tfThongTin_MaPN.setPreferredSize(new java.awt.Dimension(170, 28));
        tfThongTin_MaPN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfThongTin_MaPNMouseClicked(evt);
            }
        });
        tfThongTin_MaPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfThongTin_MaPNActionPerformed(evt);
            }
        });

        tfThongTin_MaNV.setEditable(false);
        tfThongTin_MaNV.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tfThongTin_MaNV.setPreferredSize(new java.awt.Dimension(170, 28));

        tfThongTin_TongTien.setEditable(false);
        tfThongTin_TongTien.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tfThongTin_TongTien.setPreferredSize(new java.awt.Dimension(170, 28));

        calendarThongTin.setDate(new java.util.Date(1716377574000L));
        calendarThongTin.setDateFormatString("dd / MM / yyyy");
        calendarThongTin.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        btnThongTin_Sua1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnThongTin_Sua1.setText("Sửa");
        btnThongTin_Sua1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThongTin_Sua1MouseClicked(evt);
            }
        });

        btnThongTin_Trong.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnThongTin_Trong.setText("Tạo Mới");
        btnThongTin_Trong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThongTin_TrongMouseClicked(evt);
            }
        });
        btnThongTin_Trong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongTin_TrongActionPerformed(evt);
            }
        });

        cbbThongTin_MaNCC.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cbbThongTin_MaNCC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "KH1", "KH2" }));

        javax.swing.GroupLayout pThongTin_ThongTinLayout = new javax.swing.GroupLayout(pThongTin_ThongTin);
        pThongTin_ThongTin.setLayout(pThongTin_ThongTinLayout);
        pThongTin_ThongTinLayout.setHorizontalGroup(
            pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pThongTin_ThongTinLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pThongTin_ThongTinLayout.createSequentialGroup()
                        .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblThongTin_NgayNhap)
                            .addComponent(lblThongTin_MaPN)
                            .addComponent(lblThongTin_MaNCC)
                            .addComponent(lblThongTin_MaNV)
                            .addComponent(lblThongTin_TongTien))
                        .addGap(42, 42, 42)
                        .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfThongTin_MaNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfThongTin_MaPN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfThongTin_TongTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(calendarThongTin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbbThongTin_MaNCC, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(pThongTin_ThongTinLayout.createSequentialGroup()
                        .addComponent(btnThongTin_Them)
                        .addGap(18, 18, 18)
                        .addComponent(btnThongTin_Xoa)
                        .addGap(18, 18, 18)
                        .addComponent(btnThongTin_Sua1)
                        .addGap(18, 18, 18)
                        .addComponent(btnThongTin_Trong)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pThongTin_ThongTinLayout.setVerticalGroup(
            pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pThongTin_ThongTinLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblThongTin_MaPN)
                    .addComponent(tfThongTin_MaPN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblThongTin_MaNCC)
                    .addComponent(cbbThongTin_MaNCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblThongTin_MaNV)
                    .addComponent(tfThongTin_MaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblThongTin_NgayNhap)
                    .addComponent(calendarThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblThongTin_TongTien)
                    .addComponent(tfThongTin_TongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThongTin_Them)
                    .addComponent(btnThongTin_Xoa)
                    .addComponent(btnThongTin_Sua1)
                    .addComponent(btnThongTin_Trong))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pThongTin_TimKiem.setBackground(colorPanel_Center);
        pThongTin_TimKiem.setPreferredSize(new java.awt.Dimension(405, 280));

        lblThongTin_MaKH1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblThongTin_MaKH1.setForeground(colorText);
        lblThongTin_MaKH1.setText("Mã nhà cung cấp");

        lblThongTin_TongTien1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblThongTin_TongTien1.setForeground(colorText);
        lblThongTin_TongTien1.setText("Tổng tiền");

        lblThongTin_MaHD1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblThongTin_MaHD1.setForeground(colorText);
        lblThongTin_MaHD1.setText("Mã phiếu nhập");

        lblThongTin_MaNV1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblThongTin_MaNV1.setForeground(colorText);
        lblThongTin_MaNV1.setText("Mã nhân viên");

        btnTimKiem_TimKiem.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnTimKiem_TimKiem.setText("Tìm kiếm");
        btnTimKiem_TimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTimKiem_TimKiemMouseClicked(evt);
            }
        });
        btnTimKiem_TimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiem_TimKiemActionPerformed(evt);
            }
        });

        btnTimKiem_HuyTimKiem.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnTimKiem_HuyTimKiem.setText("Hủy tìm kiếm");
        btnTimKiem_HuyTimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTimKiem_HuyTimKiemMouseClicked(evt);
            }
        });
        btnTimKiem_HuyTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiem_HuyTimKiemActionPerformed(evt);
            }
        });

        tfTimKiem_MaPN1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tfTimKiem_MaPN1.setPreferredSize(new java.awt.Dimension(170, 28));

        tfTimKiem_MaNCC1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tfTimKiem_MaNCC1.setPreferredSize(new java.awt.Dimension(170, 28));
        tfTimKiem_MaNCC1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTimKiem_MaNCC1ActionPerformed(evt);
            }
        });

        tfTimKiem_MaNV1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tfTimKiem_MaNV1.setPreferredSize(new java.awt.Dimension(170, 28));

        tfTimKiem_TongTien1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tfTimKiem_TongTien1.setPreferredSize(new java.awt.Dimension(170, 28));

        btnTimKiem_Trong1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnTimKiem_Trong1.setText("Trống");
        btnTimKiem_Trong1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTimKiem_Trong1MouseClicked(evt);
            }
        });
        btnTimKiem_Trong1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiem_Trong1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pThongTin_TimKiemLayout = new javax.swing.GroupLayout(pThongTin_TimKiem);
        pThongTin_TimKiem.setLayout(pThongTin_TimKiemLayout);
        pThongTin_TimKiemLayout.setHorizontalGroup(
            pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pThongTin_TimKiemLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pThongTin_TimKiemLayout.createSequentialGroup()
                        .addComponent(btnTimKiem_TimKiem)
                        .addGap(18, 18, 18)
                        .addComponent(btnTimKiem_HuyTimKiem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnTimKiem_Trong1))
                    .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(pThongTin_TimKiemLayout.createSequentialGroup()
                            .addComponent(lblThongTin_TongTien1)
                            .addGap(74, 74, 74)
                            .addComponent(tfTimKiem_TongTien1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pThongTin_TimKiemLayout.createSequentialGroup()
                            .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblThongTin_MaKH1)
                                .addComponent(lblThongTin_MaHD1)
                                .addComponent(lblThongTin_MaNV1))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tfTimKiem_MaNV1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tfTimKiem_MaNCC1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tfTimKiem_MaPN1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        pThongTin_TimKiemLayout.setVerticalGroup(
            pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pThongTin_TimKiemLayout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pThongTin_TimKiemLayout.createSequentialGroup()
                        .addComponent(lblThongTin_MaHD1)
                        .addGap(18, 18, 18)
                        .addComponent(lblThongTin_MaKH1))
                    .addGroup(pThongTin_TimKiemLayout.createSequentialGroup()
                        .addComponent(tfTimKiem_MaPN1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfTimKiem_MaNCC1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfTimKiem_MaNV1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblThongTin_MaNV1))))
                .addGap(18, 18, 18)
                .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblThongTin_TongTien1)
                    .addComponent(tfTimKiem_TongTien1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTimKiem_TimKiem)
                    .addComponent(btnTimKiem_HuyTimKiem)
                    .addComponent(btnTimKiem_Trong1))
                .addContainerGap())
        );

        javax.swing.GroupLayout pThongTinLayout = new javax.swing.GroupLayout(pThongTin);
        pThongTin.setLayout(pThongTinLayout);
        pThongTinLayout.setHorizontalGroup(
            pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pThongTinLayout.createSequentialGroup()
                .addComponent(lblThongTin_ThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblThongTin_TimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pThongTinLayout.createSequentialGroup()
                .addComponent(pThongTin_ThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pThongTin_TimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        pThongTinLayout.setVerticalGroup(
            pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pThongTinLayout.createSequentialGroup()
                .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblThongTin_TimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblThongTin_ThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pThongTin_ThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pThongTin_TimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
        );

        pChiTiet.setBackground(colorPanel_Center);
        pChiTiet.setBorder(javax.swing.BorderFactory.createLineBorder(colorPanel_Top, 5));
        pChiTiet.setPreferredSize(new java.awt.Dimension(880, 580));

        tblThongTin1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Mã HĐ", "Số Lượng", "Giá Bán"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblThongTin1.setGridColor(new java.awt.Color(102, 255, 102));
        tblThongTin1.setSelectionBackground(new java.awt.Color(153, 153, 153));
        tblThongTin1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblThongTin1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblThongTin1);
        if (tblThongTin1.getColumnModel().getColumnCount() > 0) {
            tblThongTin1.getColumnModel().getColumn(0).setPreferredWidth(60);
            tblThongTin1.getColumnModel().getColumn(1).setPreferredWidth(60);
            tblThongTin1.getColumnModel().getColumn(2).setPreferredWidth(60);
            tblThongTin1.getColumnModel().getColumn(3).setPreferredWidth(60);
        }

        lblChiTiet_ChiTietHoaDon.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        lblChiTiet_ChiTietHoaDon.setForeground(colorText);
        lblChiTiet_ChiTietHoaDon.setText("Chi Tiết Phiếu Nhập");

        pChiTietSanPham.setBackground(colorPanel_Center);

        lblChiTiet_SL.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblChiTiet_SL.setForeground(colorText);
        lblChiTiet_SL.setText("Số Lượng");

        btnChiTiet_Xoa.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnChiTiet_Xoa.setText("Xóa");
        btnChiTiet_Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChiTiet_XoaActionPerformed(evt);
            }
        });

        lblChiTiet_Gia.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblChiTiet_Gia.setForeground(colorText);
        lblChiTiet_Gia.setText("Giá Bán");

        btnChiTiet_Sua.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnChiTiet_Sua.setText("Sửa");
        btnChiTiet_Sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChiTiet_SuaActionPerformed(evt);
            }
        });

        tfChiTiet_MaSP.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tfChiTiet_MaSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfChiTiet_MaSPMouseClicked(evt);
            }
        });

        tfChiTiet_MaHD.setEditable(false);
        tfChiTiet_MaHD.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        tfChiTiet_SL.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tfChiTiet_SL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfChiTiet_SLActionPerformed(evt);
            }
        });

        lblChiTiet_MaSP.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblChiTiet_MaSP.setForeground(colorText);
        lblChiTiet_MaSP.setText("Mã Sản Phẩm");

        tfChiTiet_Gia.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        lblChiTiet_MaHD.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblChiTiet_MaHD.setForeground(colorText);
        lblChiTiet_MaHD.setText("Mã Hóa Đơn");

        btnChiTiet_Them.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnChiTiet_Them.setText("Thêm");
        btnChiTiet_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChiTiet_ThemActionPerformed(evt);
            }
        });

        lblChiTiet_3cham.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ShoesManager/images/Button Menu/40_20/3 chấm đen.png"))); // NOI18N
        lblChiTiet_3cham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblChiTiet_3chamMouseClicked(evt);
            }
        });

        btnChiTiet_TaoMoi.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnChiTiet_TaoMoi.setText("Tạo mới");
        btnChiTiet_TaoMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChiTiet_TaoMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pChiTietSanPhamLayout = new javax.swing.GroupLayout(pChiTietSanPham);
        pChiTietSanPham.setLayout(pChiTietSanPhamLayout);
        pChiTietSanPhamLayout.setHorizontalGroup(
            pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChiTietSanPhamLayout.createSequentialGroup()
                .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pChiTietSanPhamLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblChiTiet_MaSP)
                            .addComponent(lblChiTiet_MaHD)
                            .addComponent(lblChiTiet_SL)
                            .addComponent(lblChiTiet_Gia))
                        .addGap(38, 38, 38)
                        .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfChiTiet_MaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pChiTietSanPhamLayout.createSequentialGroup()
                                .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tfChiTiet_MaSP)
                                    .addComponent(tfChiTiet_Gia)
                                    .addComponent(tfChiTiet_SL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(lblChiTiet_3cham))))
                    .addGroup(pChiTietSanPhamLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnChiTiet_Them)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnChiTiet_Xoa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnChiTiet_Sua)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnChiTiet_TaoMoi)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pChiTietSanPhamLayout.setVerticalGroup(
            pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChiTietSanPhamLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblChiTiet_MaSP)
                        .addComponent(tfChiTiet_MaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblChiTiet_3cham, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChiTiet_MaHD)
                    .addComponent(tfChiTiet_MaHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChiTiet_SL)
                    .addComponent(tfChiTiet_SL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChiTiet_Gia)
                    .addComponent(tfChiTiet_Gia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChiTiet_Them)
                    .addComponent(btnChiTiet_Xoa)
                    .addComponent(btnChiTiet_Sua)
                    .addComponent(btnChiTiet_TaoMoi))
                .addContainerGap())
        );

        pChiTietTimKiem.setBackground(colorPanel_Center);
        pChiTietTimKiem.setForeground(colorText);
        pChiTietTimKiem.setPreferredSize(new java.awt.Dimension(380, 238));

        lblChiTiet_SoLuong2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblChiTiet_SoLuong2.setForeground(colorText);
        lblChiTiet_SoLuong2.setText("Số Lượng");

        jButton4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton4.setText("Hủy Tìm Kiếm");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton5.setText("Trống");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        tfChiTiet_MaSP2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        lblChiTiet_MaSP1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblChiTiet_MaSP1.setForeground(colorText);
        lblChiTiet_MaSP1.setText("Mã Sản Phẩm");

        jButton6.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton6.setText("Tìm Kiếm");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });

        lblMuiTen.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblMuiTen.setForeground(colorText);
        lblMuiTen.setText("->");

        lblMuiTen1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblMuiTen1.setForeground(colorText);
        lblMuiTen1.setText("->");

        lblChiTiet_3cham1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ShoesManager/images/Button Menu/40_20/3 chấm đen.png"))); // NOI18N
        lblChiTiet_3cham1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblChiTiet_3cham1MouseClicked(evt);
            }
        });

        lblChiTiet_3cham2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ShoesManager/images/Button Menu/40_20/3 chấm đen.png"))); // NOI18N
        lblChiTiet_3cham2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblChiTiet_3cham2MouseClicked(evt);
            }
        });

        tfChiTiet_SL2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        tfChiTiet_SL3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        tfChiTiet_MaSP3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        javax.swing.GroupLayout pChiTietTimKiemLayout = new javax.swing.GroupLayout(pChiTietTimKiem);
        pChiTietTimKiem.setLayout(pChiTietTimKiemLayout);
        pChiTietTimKiemLayout.setHorizontalGroup(
            pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChiTietTimKiemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pChiTietTimKiemLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pChiTietTimKiemLayout.createSequentialGroup()
                        .addComponent(tfChiTiet_MaSP2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblChiTiet_3cham1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblMuiTen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfChiTiet_MaSP3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(lblChiTiet_3cham2))
                    .addGroup(pChiTietTimKiemLayout.createSequentialGroup()
                        .addComponent(lblChiTiet_SoLuong2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfChiTiet_SL2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblMuiTen1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfChiTiet_SL3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblChiTiet_MaSP1))
                .addGap(171, 171, 171))
        );
        pChiTietTimKiemLayout.setVerticalGroup(
            pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChiTietTimKiemLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblChiTiet_MaSP1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfChiTiet_MaSP2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblMuiTen)
                        .addComponent(tfChiTiet_MaSP3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblChiTiet_3cham1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblChiTiet_3cham2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChiTiet_SoLuong2)
                    .addComponent(lblMuiTen1)
                    .addComponent(tfChiTiet_SL2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfChiTiet_SL3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        lblChiTiet_Tatca.setBackground(new java.awt.Color(255, 51, 51));
        lblChiTiet_Tatca.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        lblChiTiet_Tatca.setForeground(colorText);
        lblChiTiet_Tatca.setText("Tất cả");
        lblChiTiet_Tatca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblChiTiet_TatcaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pChiTietLayout = new javax.swing.GroupLayout(pChiTiet);
        pChiTiet.setLayout(pChiTietLayout);
        pChiTietLayout.setHorizontalGroup(
            pChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChiTietLayout.createSequentialGroup()
                .addGroup(pChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pChiTietLayout.createSequentialGroup()
                        .addComponent(pChiTietSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pChiTietTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 15, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addGap(5, 5, 5))
            .addGroup(pChiTietLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblChiTiet_ChiTietHoaDon)
                .addGap(133, 133, 133)
                .addComponent(lblChiTiet_Tatca, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pChiTietLayout.setVerticalGroup(
            pChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pChiTietLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChiTiet_ChiTietHoaDon)
                    .addComponent(lblChiTiet_Tatca))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pChiTietSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pChiTietTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pCenterLayout = new javax.swing.GroupLayout(pCenter);
        pCenter.setLayout(pCenterLayout);
        pCenterLayout.setHorizontalGroup(
            pCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pCenterLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(pThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pChiTiet, javax.swing.GroupLayout.PREFERRED_SIZE, 789, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pCenterLayout.setVerticalGroup(
            pCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pCenterLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pThongTin, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
                    .addComponent(pChiTiet, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(pCenter, java.awt.BorderLayout.CENTER);

        pTop.setBackground(colorPanel_Top);
        pTop.setPreferredSize(new java.awt.Dimension(1280, 70));
        getContentPane().add(pTop, java.awt.BorderLayout.NORTH);

        menuTaiKhoan.setText("Tài khoản");

        menuTaiKhoan_ThongTin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ShoesManager/images/user.png"))); // NOI18N
        menuTaiKhoan_ThongTin.setText("Thông tin");
        menuTaiKhoan_ThongTin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                menuTaiKhoan_ThongTinMouseReleased(evt);
            }
        });
        menuTaiKhoan.add(menuTaiKhoan_ThongTin);

        menuTaiKhoan_DangXuat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ShoesManager/images/logout.png"))); // NOI18N
        menuTaiKhoan_DangXuat.setText("Đăng xuất");
        menuTaiKhoan_DangXuat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                menuTaiKhoan_DangXuatMouseReleased(evt);
            }
        });
        menuTaiKhoan.add(menuTaiKhoan_DangXuat);

        menubar.add(menuTaiKhoan);

        menuThanhCongcu.setText("Ẩn thanh công cụ");
        menuThanhCongcu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuThanhCongcuMouseClicked(evt);
            }
        });
        menubar.add(menuThanhCongcu);

        MenuMauNen.setText("Màu nền");

        buttonGroup_MauNen.add(rdbtnThongTin_MauCam);
        rdbtnThongTin_MauCam.setSelected(true);
        rdbtnThongTin_MauCam.setText("Màu cam/ trắng");
        rdbtnThongTin_MauCam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rdbtnThongTin_MauCamMouseReleased(evt);
            }
        });
        rdbtnThongTin_MauCam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnThongTin_MauCamActionPerformed(evt);
            }
        });
        MenuMauNen.add(rdbtnThongTin_MauCam);

        buttonGroup_MauNen.add(rdbtnThongTin_MauDen);
        rdbtnThongTin_MauDen.setText("Màu đen/ đen");
        rdbtnThongTin_MauDen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rdbtnThongTin_MauDenMouseReleased(evt);
            }
        });
        rdbtnThongTin_MauDen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnThongTin_MauDenActionPerformed(evt);
            }
        });
        MenuMauNen.add(rdbtnThongTin_MauDen);

        buttonGroup_MauNen.add(rdbtnThongTin_Mautrang);
        rdbtnThongTin_Mautrang.setText("Màu trắng/ xanh");
        rdbtnThongTin_Mautrang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rdbtnThongTin_MautrangMouseReleased(evt);
            }
        });
        rdbtnThongTin_Mautrang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnThongTin_MautrangActionPerformed(evt);
            }
        });
        MenuMauNen.add(rdbtnThongTin_Mautrang);

        menubar.add(MenuMauNen);

        menuTroVe.setText("Trở về");
        menuTroVe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuTroVeMouseClicked(evt);
            }
        });
        menubar.add(menuTroVe);

        menuThoat.setText("Thoát");
        menuThoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuThoatMouseClicked(evt);
            }
        });
        menubar.add(menuThoat);

        setJMenuBar(menubar);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    public void actionVisiblePanel(){
        pThongTin_ThongTin.setVisible(false);
        pThongTin_TimKiem.setVisible(false);
    }
    
    private void lblThongTin_ThongTinMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThongTin_ThongTinMouseReleased
        // TODO add your handling code here:
        actionVisiblePanel();
        pThongTin_ThongTin.setVisible(true);
    }//GEN-LAST:event_lblThongTin_ThongTinMouseReleased

    private void lblThongTin_TimKiemMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThongTin_TimKiemMouseReleased
        // TODO add your handling code here:
        actionVisiblePanel();
        pThongTin_TimKiem.setVisible(true);
    }//GEN-LAST:event_lblThongTin_TimKiemMouseReleased

    private void btnThongTin_TrongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongTin_TrongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnThongTin_TrongActionPerformed

    private void btnTimKiem_TimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiem_TimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTimKiem_TimKiemActionPerformed

    private void btnTimKiem_HuyTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiem_HuyTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTimKiem_HuyTimKiemActionPerformed

    private void btnTimKiem_Trong1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiem_Trong1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTimKiem_Trong1ActionPerformed

    private void tfTimKiem_MaNCC1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTimKiem_MaNCC1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTimKiem_MaNCC1ActionPerformed

    
    public void nhapLuongNCC() throws Exception{
        NhaCungCapBUS bus =new NhaCungCapBUS();
        ArrayList<NhaCungCapDTO> arr =bus.getList_NV();
        String[] s = new String[bus.getNumb()];
        int i = 0;
        for (NhaCungCapDTO dto : arr) {
            s[i] = dto.getStrMaNCC();
            i++;
            System.out.println(dto.getStrMaNCC());
        }
        cbbThongTin_MaNCC.setModel(new DefaultComboBoxModel<>(s));
    }
    
    
    private void anHienCacNut(boolean bl) {
        // hiển thị nút btn
        btnThongTin_Them.setEnabled(bl);
        btnThongTin_Xoa.setEnabled(bl);
        btnThongTin_Sua1.setEnabled(bl);
        
        btnChiTiet_Sua.setEnabled(bl);
        btnChiTiet_TaoMoi.setEnabled(bl);
        btnChiTiet_Them.setEnabled(bl);
        btnChiTiet_Xoa.setEnabled(bl);
        
        // không cho chỉnh sửa
        tfChiTiet_MaSP.setEditable(bl);
        tfChiTiet_SL.setEditable(bl);
        tfChiTiet_Gia.setEditable(bl);
    }
    
    private void tblThongTinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblThongTinMouseClicked
        // TODO add your handling code here:
        int  i=tblThongTin.getSelectedRow();
        
        tfThongTin_MaPN.setText(tblThongTin.getModel().getValueAt(i, 0).toString());
        cbbThongTin_MaNCC.setSelectedItem(tblThongTin.getModel().getValueAt(i, 1));
        tfThongTin_MaNV.setText(tblThongTin.getModel().getValueAt(i, 2).toString());         
        Date date = new Date((String) tblThongTin.getModel().getValueAt(i, 3));
        calendarThongTin.setDate(date);
        tfThongTin_TongTien.setText(tblThongTin.getModel().getValueAt(i, 4).toString());
        // lấy thông tin
        TongTien = Double.parseDouble(tfThongTin_TongTien.getText());
        
        phieunhap.setStrMaPN(tfThongTin_MaPN.getText());
        phieunhap.setStrMaNCC((String) cbbThongTin_MaNCC.getSelectedItem());
        phieunhap.setStrMaNV(tfThongTin_MaNV.getText());
        phieunhap.setStrNgayNhap((String) tblThongTin.getModel().getValueAt(i, 3));
        phieunhap.setTongTien(Double.parseDouble(tfThongTin_TongTien.getText()));
        System.out.println(phieunhap.toString());
        
        // hiển thị bên chi tiết
        actionButtondisplayChiTiet(tfThongTin_MaPN.getText());
        
        anHienCacNut(false);
        
        if (TongTien == 0)
            btnThongTin_Xoa.setEnabled(true);
        
        if (cachamquangtrong.kiemTraDate(date1,
                (String) tblThongTin.getModel().getValueAt(i, 3))) {
            btnThongTin_Sua1.setEnabled(true);
            btnChiTiet_Sua.setEnabled(true);
            btnChiTiet_Them.setEnabled(true);
            btnChiTiet_Xoa.setEnabled(true);
            btnChiTiet_TaoMoi.setEnabled(true);
        }
        
        // không cho chỉnh sửa
        tfThongTin_MaPN.setEditable(false);
        
        tfChiTiet_MaSP.setText("");
        tfChiTiet_MaHD.setText("");
        tfChiTiet_SL.setText("");
        tfChiTiet_Gia.setText("");
    }//GEN-LAST:event_tblThongTinMouseClicked

    private void btnThongTin_TrongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThongTin_TrongMouseClicked
        // TODO add your handling code here:
        TongTien = 0;
        
        tfThongTin_MaPN.setText(list_PN.getDefaultMaPN());
        cbbThongTin_MaNCC.setSelectedIndex(0);
        tfThongTin_MaNV.setText(Memory.maNV);       
        tfThongTin_TongTien.setText("");
        
        tfChiTiet_MaSP.setText("");
        tfChiTiet_SL.setText("");
        tfChiTiet_Gia.setText("");
        tfChiTiet_MaHD.setText(tfThongTin_MaPN.getText());
        
        String s = LocalDateTime.now().getDayOfMonth() + " " +
                LocalDateTime.now().getYear() + " " +
                LocalDateTime.now().getMonth() ;
        System.out.println(s);
        
        Date date = new Date(s);
        calendarThongTin.setDate(date);
        
        tfThongTin_MaPN.requestFocus();
        
        anHienCacNut(false);
        btnThongTin_Them.setEnabled(true);
        
        // xóa thông tin bên chi tiết
        actionButtondisplayChiTiet(tfThongTin_MaPN.getText());
    }//GEN-LAST:event_btnThongTin_TrongMouseClicked

    private void tfThongTin_MaPNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfThongTin_MaPNMouseClicked
        // TODO add your handling code here:
        System.out.println("Click here PLae");
    }//GEN-LAST:event_tfThongTin_MaPNMouseClicked

    private void tfChiTiet_SLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfChiTiet_SLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfChiTiet_SLActionPerformed

    private void btnChiTiet_TaoMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiTiet_TaoMoiActionPerformed
        // TODO add your handling code here:
        tfChiTiet_MaSP.setText("");
        tfChiTiet_MaHD.setText(phieunhap.getStrMaPN());
        tfChiTiet_Gia.setText("");
        tfChiTiet_SL.setText("");
    }//GEN-LAST:event_btnChiTiet_TaoMoiActionPerformed

    private void rdbtnThongTin_MautrangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtnThongTin_MautrangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbtnThongTin_MautrangActionPerformed

    private void rdbtnThongTin_MauDenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtnThongTin_MauDenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbtnThongTin_MauDenActionPerformed

    private void rdbtnThongTin_MauCamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtnThongTin_MauCamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbtnThongTin_MauCamActionPerformed

    private void rdbtnThongTin_MauCamMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdbtnThongTin_MauCamMouseReleased
        Memory.colorThemes =  new Color(250, 160, 100);
        Memory.colorThemes_2 = new Color(255, 255, 255);
        Memory.colorText = new Color(0, 0, 0);
        colorPanel_Top = Memory.colorThemes;
        colorPanel_Center = Memory.colorThemes_2;
        colorText = Memory.colorText;
        setTextColor("đen");
        System.out.println("da thay doi mau nen thanh cam trang");        // TODO add your handling code here:
    }//GEN-LAST:event_rdbtnThongTin_MauCamMouseReleased

    private void rdbtnThongTin_MauDenMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdbtnThongTin_MauDenMouseReleased
        // TODO add your handling code here:
        Memory.colorThemes =  new Color(0, 0, 0);
        Memory.colorThemes_2 = new Color(0, 0, 0);
        Memory.colorText = new Color(255, 255, 255);
        colorPanel_Top = Memory.colorThemes;
        colorPanel_Center = Memory.colorThemes_2;
        colorText = Memory.colorText;
        setTextColor("trắng");
        System.out.println("da thay doi mau nen thanh den");
    }//GEN-LAST:event_rdbtnThongTin_MauDenMouseReleased

    private void rdbtnThongTin_MautrangMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdbtnThongTin_MautrangMouseReleased
        // TODO add your handling code here:
        Memory.colorThemes =  new Color(255, 255, 255);
        Memory.colorThemes_2 = new Color(131,189,246);
        Memory.colorText = new Color(0, 0, 0);
        colorPanel_Top = Memory.colorThemes;
        colorPanel_Center = Memory.colorThemes_2;
        colorText = Memory.colorText;
        setTextColor("đen");
        System.out.println("da thay doi mau nen thanh trang");
    }//GEN-LAST:event_rdbtnThongTin_MautrangMouseReleased

    private void menuThanhCongcuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuThanhCongcuMouseClicked
        // TODO add your handling code here:
        if ( Memory.flag_Menu ) {
            pTop.setVisible(false);
            menuThanhCongcu.setText("Hiện thanh công cụ");
            Memory.flag_Menu = false;
        }
        else {
            pTop.setVisible(true);
            menuThanhCongcu.setText("Ẩn thanh công cụ");
            Memory.flag_Menu = true;
        }
    }//GEN-LAST:event_menuThanhCongcuMouseClicked

    private void menuTroVeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTroVeMouseClicked
        // TODO add your handling code here:
        Home home;
        try {
            home = new Home();
            home.setVisible(true);
            setVisible(false);
        } catch (Exception e) {
            System.out.println("Lỗi");
        }
    }//GEN-LAST:event_menuTroVeMouseClicked

    private void menuTaiKhoan_ThongTinMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTaiKhoan_ThongTinMouseReleased

        // TODO add your handling code here:
        UserInfor ui = new UserInfor();
        ui.setVisible(true);
    }//GEN-LAST:event_menuTaiKhoan_ThongTinMouseReleased

    private void menuTaiKhoan_DangXuatMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTaiKhoan_DangXuatMouseReleased
        // TODO add your handling code here:
        Login lg;
        try {
            lg = new Login();
            lg.setVisible(true);
            this.setVisible(false);
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menuTaiKhoan_DangXuatMouseReleased

    private void menuThoatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuThoatMouseClicked
        // TODO add your handling code here:
        Question_YesNO Q = new Question_YesNO("Bạn có muốn thoát không?");
        Q.setVisible(true);
        
    }//GEN-LAST:event_menuThoatMouseClicked

    private void tblThongTin1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblThongTin1MouseClicked
        // TODO add your handling code here:
        int  i=tblThongTin1.getSelectedRow();
        
        tfChiTiet_MaSP.setText(tblThongTin1.getModel().getValueAt(i, 0).toString());
        tfChiTiet_MaHD.setText(tblThongTin1.getModel().getValueAt(i, 1).toString());
        tfChiTiet_SL.setText(tblThongTin1.getModel().getValueAt(i, 2).toString());
        tfChiTiet_Gia.setText(tblThongTin1.getModel().getValueAt(i, 3).toString());
    }//GEN-LAST:event_tblThongTin1MouseClicked

    private void actionxoathongtin() {
        PhieuNhapDTO hd = new PhieuNhapDTO();
        hd.setStrMaPN(tfThongTin_MaPN.getText());
        
        try {
            list_PN.xoa(hd);
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            list_PN.docDB();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        actionButtondisplay();
        
        tfThongTin_MaPN.setText("");
        tfThongTin_TongTien.setText("");
        cbbThongTin_MaNCC.setSelectedIndex(0);
        cbbThongTin_MaNCC.setSelectedIndex(0);
    }
    
    private void btnThongTin_XoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThongTin_XoaMouseClicked
        // TODO add your handling code here:
        int reply = JOptionPane.showConfirmDialog(null, "Bạn muốn xóa không?", "xóa", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
           actionxoathongtin();
        } 
        
    }//GEN-LAST:event_btnThongTin_XoaMouseClicked

    private void btnThongTin_Sua1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThongTin_Sua1MouseClicked
        // TODO add your handling code here:
        int iPos = 0;
        
        for (int i = 0 ; i < list_PN.getNumb() ; i++) {
            PhieuNhapDTO hd = list_PN.getInfor(i);
            if (hd.getStrMaPN().equals(phieunhap.getStrMaPN()))
                iPos = i;
        }
       
        String[] s = String.valueOf(calendarThongTin.getDate()).split("\\ ");
        System.out.println(s[2] + " " + s[1] + " " +s[5]);
        System.out.println(calendarThongTin.getDate());
        String NgayBan = s[2] + " " + s[1] + " " +s[5];
        
        phieunhap.setStrMaPN( tfThongTin_MaPN.getText());
        phieunhap.setStrMaNCC((String) cbbThongTin_MaNCC.getSelectedItem());
        phieunhap.setStrMaNV(tfThongTin_MaNV.getText());
        phieunhap.setStrNgayNhap(NgayBan);
        phieunhap.setTongTien( Double.parseDouble(tfThongTin_TongTien.getText()));
        
        try {
            list_PN.sua(phieunhap);
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        actionButtondisplay();
        actionButtondisplayChiTiet(phieunhap.getStrMaPN());
        
       
        
        if (!tfThongTin_MaPN.getText().equals("")) {
            tfThongTin_MaPN.setText("");
            tfThongTin_TongTien.setText("");
            cbbThongTin_MaNCC.setSelectedIndex(0);
        }
    }//GEN-LAST:event_btnThongTin_Sua1MouseClicked

   
    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            list_ChiTietPN.docDB();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if (!tfChiTiet_MaSP2.getText().equals(""))
               list_ChiTietPN.setList_PN(list_ChiTietPN.timKiem_MaSP(tfChiTiet_MaSP2.getText()
                    , tfChiTiet_MaSP3.getText()) );
        
        if (!tfChiTiet_SL2.getText().equals(""))
                list_ChiTietPN.setList_PN(list_ChiTietPN.timKiem_SoLuong( Integer.parseInt(tfChiTiet_SL2.getText())
                        , Integer.parseInt(tfChiTiet_SL3.getText())) );
        if (tfThongTin_MaPN.getText().equals(""))
            actionButtondisplayChiTiet();
        else
            actionButtondisplayChiTiet(tfThongTin_MaPN.getText());
        System.out.println("Đang tìm kiếm");
    }//GEN-LAST:event_jButton6MouseClicked

    private void btnTimKiem_TimKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiem_TimKiemMouseClicked
        try {
            // TODO add your handling code here:
            list_PN.docDB();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if (!tfTimKiem_MaPN1.getText().equals(""))
            list_PN.setList_TK( list_PN.timKiem_MaPN(tfTimKiem_MaPN1.getText()));
        if (!tfTimKiem_MaNCC1.getText().equals(""))
            list_PN.setList_TK( list_PN.timKiem_MaNCC(tfTimKiem_MaNCC1.getText()) );
        if (!tfTimKiem_MaNV1.getText().equals(""))
            list_PN.setList_TK( list_PN.timKiem_MaNV(tfTimKiem_MaNV1.getText()) );
        if (!tfTimKiem_TongTien1.getText().equals(""))
            list_PN.setList_TK( list_PN.timKiem_TongTien(tfTimKiem_TongTien1.getText()) );
        actionButtondisplay();
        System.out.println("Đang tìm kiếm");
        
    }//GEN-LAST:event_btnTimKiem_TimKiemMouseClicked

    private void btnTimKiem_HuyTimKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiem_HuyTimKiemMouseClicked
        try {
            list_PN = new PhieuNhapBUS();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            list_PN.docDB();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        actionButtondisplay();
    }//GEN-LAST:event_btnTimKiem_HuyTimKiemMouseClicked

    private void btnTimKiem_Trong1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiem_Trong1MouseClicked

        // TODO add your handling code here:try 
        try{
            list_PN = new PhieuNhapBUS();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        tfTimKiem_MaPN1.setText("");
        tfTimKiem_MaNCC1.setText("");
        tfTimKiem_MaNV1.setText("");
        tfTimKiem_TongTien1.setText("");
    }//GEN-LAST:event_btnTimKiem_Trong1MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here: 
        try {
            list_ChiTietPN.docDB();
            if (tfThongTin_MaPN.getText().equals(""))
                actionButtondisplayChiTiet();
            else
                actionButtondisplayChiTiet(tfThongTin_MaPN.getText());
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:
        tfChiTiet_MaSP2.setText("");
        tfChiTiet_MaSP3.setText("");
        tfChiTiet_SL2.setText("");
        tfChiTiet_SL3.setText("");
        
    }//GEN-LAST:event_jButton5MouseClicked

    private void tfThongTin_MaPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfThongTin_MaPNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfThongTin_MaPNActionPerformed

    private void btnChiTiet_SuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiTiet_SuaActionPerformed
        int  i = tblThongTin1.getSelectedRow();
        
        ChiTietPNDTO hd = new ChiTietPNDTO();
        
        int iSL_SP_LucDau = Integer.parseInt(tblThongTin1.getModel().getValueAt(i, 2).toString());
        
        hd.setStrMaGiay(tfChiTiet_MaSP.getText());
        hd.setStrMaPN(tfChiTiet_MaHD.getText());
        hd.setiGiaNhap(Integer.parseInt(tfChiTiet_Gia.getText()));
        hd.setiSoLuong(Integer.parseInt(tfChiTiet_SL.getText()));

        tinhTongTien(iSL_SP_LucDau
                , Integer.parseInt(tblThongTin1.getModel().getValueAt(i, 3).toString())
                , false
        );
        
        try {
            list_ChiTietPN.sua(hd);
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        actionButtondisplayChiTiet(phieunhap.getStrMaPN());
        
        tinhTongTien(Integer.parseInt(tfChiTiet_Gia.getText())
                , Integer.parseInt(tfChiTiet_SL.getText())
                , true
        );
        
        // tính sl sp
        int iCount = iSL_SP_LucDau - hd.getiSoLuong();
        
        chinhSuaSoLuong_SP( hd.getStrMaGiay(), iCount, hd.getiGiaNhap(), true);
        
        phieunhap.setTongTien(TongTien);
        
        try {
            list_PN.sua(phieunhap);
            actionButtondisplay();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        tfChiTiet_Gia.setText("");
        tfChiTiet_MaSP.setText("");
        tfChiTiet_MaHD.setText("");
        tfChiTiet_SL.setText("");
    }//GEN-LAST:event_btnChiTiet_SuaActionPerformed

    private void lblChiTiet_TatcaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblChiTiet_TatcaMouseClicked
        // TODO add your handling code here:
        tfThongTin_MaPN.setText("");
        cbbThongTin_MaNCC.setSelectedIndex(0);
        tfThongTin_MaNV.setText(Memory.maNV); 
        tfThongTin_TongTien.setText("");
        
        
        String s = LocalDateTime.now().getDayOfMonth() + " " +
                LocalDateTime.now().getYear() + " " +
                LocalDateTime.now().getMonth() ;
        System.out.println(s);
        
        Date date = new Date(s);
        calendarThongTin.setDate(date);
        
        actionButtondisplayChiTiet();
    }//GEN-LAST:event_lblChiTiet_TatcaMouseClicked

    private void btnThongTin_ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongTin_ThemActionPerformed

        try {
            list_PN.docDB();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        String[] s = String.valueOf(calendarThongTin.getDate()).split("\\ ");
        System.out.println(s[2] + " " + s[1] + " " +s[5]);
        System.out.println(calendarThongTin.getDate());
        String NgayBan = s[2] + " " + s[1] + " " +s[5];
        
        phieunhap.setStrMaPN( tfThongTin_MaPN.getText());
        phieunhap.setStrMaNCC((String) cbbThongTin_MaNCC.getSelectedItem());
        phieunhap.setStrMaNV(tfThongTin_MaNV.getText());
        phieunhap.setStrNgayNhap(NgayBan);
        
        
        if (tfThongTin_TongTien.getText().equals(""))
            tfThongTin_TongTien.setText("0");
        phieunhap.setTongTien( Double.parseDouble(tfThongTin_TongTien.getText()));
        
        try {
            list_PN.them(phieunhap);
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            list_PN.docDB();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        tfChiTiet_MaHD.setText(phieunhap.getStrMaPN());
        
        tfChiTiet_MaSP.requestFocus();
        tfChiTiet_MaHD.setText(tfThongTin_MaPN.getText());
        
        tfThongTin_MaPN.setText("");
        tfThongTin_TongTien.setText("");
        cbbThongTin_MaNCC.setSelectedIndex(0);
        
        actionButtondisplay();
        anHienCacNut(true);
    }//GEN-LAST:event_btnThongTin_ThemActionPerformed

    /**
     * tong tien = tong tien + So Luong * Gia Ban * ti le khuyen mai
     * @param iSoLuong
     * @param iGiaBan
     * @param tiLeKM
     * @param hanhDong true nếu là xóa và false nếu là thêm
     */
    private double tinhTongTien(int iSoLuong, int iGiaBan, boolean hanhDong) {
        if (hanhDong)
            TongTien += iSoLuong * iGiaBan;
        else
             TongTien -= iSoLuong * iGiaBan;
        return TongTien;
    }
    
    
    private void xulyThemChiTietPN(){
        
        try {
            list_ChiTietPN.docDB();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        ChiTietPNDTO hd = new ChiTietPNDTO();
        
        hd.setStrMaGiay(tfChiTiet_MaSP.getText());
        hd.setStrMaPN(tfChiTiet_MaHD.getText());
        hd.setiGiaNhap(Integer.parseInt(tfChiTiet_Gia.getText()));
        hd.setiSoLuong(Integer.parseInt(tfChiTiet_SL.getText()));
        
        boolean flag = list_ChiTietPN.kiemTraKhoachinh(hd);
        try {
            if ( !flag ) {
                System.out.println( list_ChiTietPN.them(hd) );
                chinhSuaSoLuong_SP(hd.getStrMaGiay(), hd.getiSoLuong(), hd.getiGiaNhap(), false);
                System.out.println("chinh sua san pham hoan tat");
            }
            else 
                JOptionPane.showMessageDialog(null, "Bị trùng mã SP", "Error", JOptionPane.ERROR_MESSAGE);
                
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            list_ChiTietPN.docDB();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        actionButtondisplayChiTiet(phieunhap.getStrMaPN());
        
        // nếu như thêm vào được
        // ghi dữ liệu
        if ( !flag ) {
            tinhTongTien(Integer.parseInt(tfChiTiet_SL.getText())
                    , Integer.parseInt(tfChiTiet_Gia.getText())
                    , true);
       
            phieunhap.setTongTien(TongTien);
            
            try {
                list_PN.sua(phieunhap);
            } catch (Exception ex) {
                Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            actionButtondisplay();
        }
        
        tfChiTiet_MaSP.setText("");
        tfChiTiet_SL.setText("");
        tfChiTiet_Gia.setText("");
        tfChiTiet_MaSP.requestFocus();
    }
    
    private boolean kiemTraHangHoa() {
        if (Integer.parseInt(tfChiTiet_SL.getText()) > 0) 
            return true;
        return false;
    }
    
    private boolean kiemtraMaSP() {
        SanPhamDTO sp = new SanPhamDTO();
        sp = list_SanPham.getInfor(tfChiTiet_MaSP.getText());
        
        if (sp.getStrMaGiay().equals("null"))
            return false;
        
        tfChiTiet_SL.setText(String.valueOf(sp.getiSoLuong()));
        tfChiTiet_Gia.setText(String.valueOf(sp.getiGia()));
        
        return true;
    }
    /**
     * thêm hoặc bớt số lượng sản phẩm
     * @param strMaSP
     * @param iSoLuong so luong can thay doi
     * @param hanhdong <h2>Tăng số lượng sản phẩm là true</h2>
     */
    private void chinhSuaSoLuong_SP(String strMaSP, int iSoLuong, int GiaNhap, boolean hanhdong) {
        SanPhamDTO sp = new SanPhamDTO();
        
        sp = list_SanPham.getInfor(strMaSP);
        
        sp.setiGia(GiaNhap + 50);
                
        if (!hanhdong) {
            sp.setiSoLuong( sp.getiSoLuong() + iSoLuong );
            System.out.println("tang so luong sp");
        }
        else {
            sp.setiSoLuong( sp.getiSoLuong() - iSoLuong );
            System.out.println("Giam so luong sp");
        }
            
        System.out.println("aaaaaaaaaaaaaaaaa"+sp.getiSoLuong());
        
        try {
            System.out.println("hanh dong chinh sua sp: "+ list_SanPham.sua(sp) );
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void actionTFChiTiet() {
        tfChiTiet_MaSP.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent key){
                if ( key.getKeyCode() == KeyEvent.VK_ENTER ) {
                    tfChiTiet_SL.requestFocus();
                    kiemtraMaSP();
                }
            }
        });
        
        tfChiTiet_SL.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent key){
                if ( key.getKeyCode() == KeyEvent.VK_ENTER ) {
                    
                        btnChiTiet_ThemActionPerformed(null);
                        tfChiTiet_MaSP.requestFocus();
                        
                }
            }
        });
    }
    
    private void btnChiTiet_ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiTiet_ThemActionPerformed
        // TODO add your handling code here:
        if(kiemTraHangHoa())
            xulyThemChiTietPN();
        else
            JOptionPane.showMessageDialog(null, "Sai số lượng", "Error", JOptionPane.ERROR_MESSAGE);
                
    }//GEN-LAST:event_btnChiTiet_ThemActionPerformed

    private void actionxoachitiet() {
        ChiTietPNDTO hd = new ChiTietPNDTO();
        hd.setStrMaGiay(tfChiTiet_MaSP.getText());
        hd.setStrMaPN(tfChiTiet_MaHD.getText());
        hd.setiSoLuong(Integer.parseInt(tfChiTiet_SL.getText()));
        hd.setiGiaNhap(Integer.parseInt(tfChiTiet_Gia.getText()));
        
        tinhTongTien( Integer.parseInt(tfChiTiet_SL.getText())
                    , Integer.parseInt(tfChiTiet_Gia.getText())
                    , false);
        
        phieunhap.setTongTien(TongTien);
        
        try {
            list_PN.sua(phieunhap);
            actionButtondisplay();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            list_ChiTietPN.xoa(hd);
            list_ChiTietPN.docDB();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        chinhSuaSoLuong_SP(hd.getStrMaGiay(), hd.getiSoLuong(), 0, true);
        
        actionButtondisplayChiTiet(phieunhap.getStrMaPN());
        
        tfChiTiet_Gia.setText("");
        tfChiTiet_MaSP.setText("");
        tfChiTiet_MaHD.setText("");
        tfChiTiet_SL.setText("");
    }
    
    private void btnChiTiet_XoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiTiet_XoaActionPerformed
        // TODO add your handling code here:
        int reply = JOptionPane.showConfirmDialog(null, "Bạn muốn xóa không?", "xóa", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
           actionxoachitiet();
        } 
        
        
    }//GEN-LAST:event_btnChiTiet_XoaActionPerformed

    private void tfChiTiet_MaSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfChiTiet_MaSPMouseClicked
        // TODO add your handling code here:
        tfChiTiet_Gia.setText("");
        tfChiTiet_SL.setText("");
    }//GEN-LAST:event_tfChiTiet_MaSPMouseClicked

    int x_Mouse, y_Mouse;
    
    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
         x_Mouse = evt.getX();
         y_Mouse = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        
        setLocation(x - x_Mouse, y - y_Mouse);
    }//GEN-LAST:event_formMouseDragged

    private void lblChiTiet_3chamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblChiTiet_3chamMouseClicked
        // TODO add your handling code here:
        ChonSanPham csp = new ChonSanPham(this, true);
        csp.setVisible(true);
       tfChiTiet_MaSP.setText(Memory.maSP);
    }//GEN-LAST:event_lblChiTiet_3chamMouseClicked

    private void lblChiTiet_3cham1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblChiTiet_3cham1MouseClicked
        // TODO add your handling code here:
        ChonSanPham csp = new ChonSanPham(this, true);
        csp.setVisible(true);
       tfChiTiet_MaSP2.setText(Memory.maSP);
    }//GEN-LAST:event_lblChiTiet_3cham1MouseClicked

    private void lblChiTiet_3cham2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblChiTiet_3cham2MouseClicked
        // TODO add your handling code here:
        ChonSanPham csp = new ChonSanPham(this, true);
        csp.setVisible(true);
       tfChiTiet_MaSP3.setText(Memory.maSP);
    }//GEN-LAST:event_lblChiTiet_3cham2MouseClicked

    
    /**
     * Hàm kiểm tra xem cập bậc của nó 
     * 1 : Admin FULL POWER
     * 2 : Nhập xuất file Excel và Thống Kê
     * 3 : Kiểm tra hàng hóa
     * 4 : Nhập Hàng
     * 5 : Khuyến mãi
     * 6 : Hóa đơn
     */
    public void kiemTraCapBac(){
        // truyền tham số cấp bậc chức vụ vào
        int iKey = Memory.iCapBac;
        
        if ( iKey != 1) {
            for (int i  = 0 ; i < strArr_Top.length ; i++) {
                listLblTop[i].setVisible(false);
            }
        }
        
        switch (iKey) {
            case 2:
                listLblTop[6].setVisible(true);
                listLblTop[5].setVisible(true);
                listLblTop[4].setVisible(true);
                break;
            case 3:
                listLblTop[6].setVisible(true);
                listLblTop[3].setVisible(true);
                break;
            case 4:
                listLblTop[6].setVisible(true);
                listLblTop[2].setVisible(true);
                break;
            case 5:
                listLblTop[6].setVisible(true);
                listLblTop[1].setVisible(true);
                break;
            case 6:
                listLblTop[6].setVisible(true);
                listLblTop[0].setVisible(true);
                break;
        }
    }
    
    private void createVectorHeader() {
        if (model.getRowCount()==0) {
            Vector<String> header = new Vector();
            header.add("Mã PN");
            header.add("Mã NCC");
            header.add("Mã NV");
            header.add("Ngày Nhập");
            header.add("Tổng Tiền");
            
            model = new DefaultTableModel(header, 0){
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return false;
                }
            };;
        }
    }
    
    private void actionButtondisplay() {
        model = new DefaultTableModel();
        
        createVectorHeader();
        for (int i=0 ; i < list_PN.getNumb() ; i++) {
            PhieuNhapDTO hd = new PhieuNhapDTO();
            
            hd = list_PN.getInfor(i);
            
            createVectorHeader();
            
            Vector row=new Vector();
            row.add(hd.getStrMaPN());
            row.add(hd.getStrMaNCC());
            row.add(hd.getStrMaNV());
            row.add(hd.getStrNgayNhap());
            row.add(hd.getTongTien());
            
            model.addRow(row);
        }
       
        
        tblThongTin.setModel(model);
        
    }
    private void createVectorHeaderChiTiet() {
        if (modelChiTiet.getRowCount()==0) {
            Vector<String> header = new Vector();
            header.add("Mã Sản Phẩm");
            header.add("Mã Phiếu Nhập");
            header.add("Số Lượng");
            header.add("Giá Nhập");
            modelChiTiet = new DefaultTableModel(header, 0) {
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return false;
                }
            };
        }
    }
    
    private void actionButtondisplayChiTiet() {
        actionButtondisplayChiTiet("null");
    }
    
    private void actionButtondisplayChiTiet(String strMaHD) {
        modelChiTiet = new DefaultTableModel();
        
        createVectorHeaderChiTiet();
        for (int i=0 ; i < list_ChiTietPN.getNumbChiTietPN() ; i++) {
            ChiTietPNDTO hd = new ChiTietPNDTO();
            
            hd = list_ChiTietPN.getInfor(i);
            
            createVectorHeaderChiTiet();
            
            if ( hd.getStrMaPN().equalsIgnoreCase(strMaHD) || 
                    strMaHD.equals("null")) {
                
                Vector row=new Vector();
                row.add(hd.getStrMaGiay());
                row.add(hd.getStrMaPN());
                row.add(hd.getiSoLuong());
                row.add(hd.getiGiaNhap());
                modelChiTiet.addRow(row);
            }
        }
        
        tblThongTin1.setModel(modelChiTiet);
    }

    private JPanel createPanel_LblTop(String[] strArr_Top) {
        JPanel Panel = new JPanel();
        listLblTop = new JLabel[10];
        
        Panel.setLayout(new FlowLayout(0,30,10));
        Panel.setBackground(colorPanel_Top);
        
        for (int i=0 ; i < strArr_Top.length ; i++) {
            listLblTop[i] = new JLabel(new ImageIcon("./src/ShoesManager/images/Button Menu/150_50/"+strArr_Top[i]+".png"));
            listLblTop[i].setName(strArr_Top[i]);
            listLblTop[i].setOpaque(true);
            listLblTop[i].addMouseListener(this);
            listLblTop[i].setBackground(colorPanel_Top);
            
            Panel.add(listLblTop[i]);
        }
        
        return Panel;
    }
    
    public void setTextColor(String Mau){
        colorText = colorText;
        lblChiTiet_Gia.setForeground(colorText);
        lblChiTiet_MaHD.setForeground(colorText);
        lblChiTiet_MaSP.setForeground(colorText);
        lblChiTiet_MaSP1.setForeground(colorText);
        lblChiTiet_SL.setForeground(colorText);
        lblThongTin_MaPN.setForeground(colorText);
        lblThongTin_MaHD1.setForeground(colorText);
        lblThongTin_MaNCC.setForeground(colorText);
        lblThongTin_MaKH1.setForeground(colorText);
        lblThongTin_MaNV.setForeground(colorText);
        lblThongTin_MaNV1.setForeground(colorText);
        lblThongTin_NgayNhap.setForeground(colorText);
        lblThongTin_ThongTin.setForeground(colorText);
        lblThongTin_TimKiem.setForeground(colorText);
        lblThongTin_TongTien.setForeground(colorText);
        lblThongTin_TongTien1.setForeground(colorText);
        lblChiTiet_SoLuong2.setForeground(colorText);
        lblChiTiet_ChiTietHoaDon.setForeground(colorText);
        lblChiTiet_Tatca.setForeground(colorText);
        lblMuiTen.setForeground(colorText);
        lblMuiTen1.setForeground(colorText);
        
        //-----------------------Đổi màu cho Panel
        pTop.setBackground( colorPanel_Top );
        pCenter.setBackground( colorPanel_Center );
        pChiTiet.setBackground( colorPanel_Center );
        pThongTin.setBackground( colorPanel_Center );
        pThongTin_ThongTin.setBackground( colorPanel_Center );
        pThongTin_TimKiem.setBackground( colorPanel_Center );
        pChiTietSanPham.setBackground( colorPanel_Center );
        pChiTietTimKiem.setBackground( colorPanel_Center );
        
        //---------------------list lbl top
        for (int i=0 ; i < strArr_Top.length ; i++) {
            listLblTop[i].setBackground( colorPanel_Top );
        }
        
        //------------------------0Doi963 màu khung
        pThongTin.setBorder(BorderFactory.createLineBorder(colorPanel_Top, 5) );
        pChiTiet.setBorder(BorderFactory.createLineBorder(colorPanel_Top, 5) );
        lblChiTiet_3cham.setIcon(new ImageIcon("./src/ShoesManager/images/Button Menu/40_20/3 chấm "+Mau+".png"));
        lblChiTiet_3cham1.setIcon(new ImageIcon("./src/ShoesManager/images/Button Menu/40_20/3 chấm "+Mau+".png"));
        lblChiTiet_3cham2.setIcon(new ImageIcon("./src/ShoesManager/images/Button Menu/40_20/3 chấm "+Mau+".png"));
    

    }   
    
    public void colordefault(){
        Color color;
        color = new Color(250, 160, 100);
        if (Memory.colorThemes.getRGB() == color.getRGB() )
            rdbtnThongTin_MauCam.setSelected(true);
        color = new Color(0, 0, 0);
        if (Memory.colorThemes.getRGB() == color.getRGB() )
            rdbtnThongTin_MauDen.setSelected(true);
        color = new Color(255, 255, 255);
        if (Memory.colorThemes.getRGB() == color.getRGB() )
            rdbtnThongTin_Mautrang.setSelected(true);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhieuNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhieuNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhieuNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhieuNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new PhieuNhap().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MenuMauNen;
    private javax.swing.JButton btnChiTiet_Sua;
    private javax.swing.JButton btnChiTiet_TaoMoi;
    private javax.swing.JButton btnChiTiet_Them;
    private javax.swing.JButton btnChiTiet_Xoa;
    private javax.swing.JButton btnThongTin_Sua1;
    private javax.swing.JButton btnThongTin_Them;
    private javax.swing.JButton btnThongTin_Trong;
    private javax.swing.JButton btnThongTin_Xoa;
    private javax.swing.JButton btnTimKiem_HuyTimKiem;
    private javax.swing.JButton btnTimKiem_TimKiem;
    private javax.swing.JButton btnTimKiem_Trong1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup_MauNen;
    private com.toedter.calendar.JDateChooser calendarThongTin;
    private javax.swing.JComboBox<String> cbbThongTin_MaNCC;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblChiTiet_3cham;
    private javax.swing.JLabel lblChiTiet_3cham1;
    private javax.swing.JLabel lblChiTiet_3cham2;
    private javax.swing.JLabel lblChiTiet_ChiTietHoaDon;
    private javax.swing.JLabel lblChiTiet_Gia;
    private javax.swing.JLabel lblChiTiet_MaHD;
    private javax.swing.JLabel lblChiTiet_MaSP;
    private javax.swing.JLabel lblChiTiet_MaSP1;
    private javax.swing.JLabel lblChiTiet_SL;
    private javax.swing.JLabel lblChiTiet_SoLuong2;
    private javax.swing.JLabel lblChiTiet_Tatca;
    private javax.swing.JLabel lblMuiTen;
    private javax.swing.JLabel lblMuiTen1;
    private javax.swing.JLabel lblThongTin_MaHD1;
    private javax.swing.JLabel lblThongTin_MaKH1;
    private javax.swing.JLabel lblThongTin_MaNCC;
    private javax.swing.JLabel lblThongTin_MaNV;
    private javax.swing.JLabel lblThongTin_MaNV1;
    private javax.swing.JLabel lblThongTin_MaPN;
    private javax.swing.JLabel lblThongTin_NgayNhap;
    private javax.swing.JLabel lblThongTin_ThongTin;
    private javax.swing.JLabel lblThongTin_TimKiem;
    private javax.swing.JLabel lblThongTin_TongTien;
    private javax.swing.JLabel lblThongTin_TongTien1;
    private javax.swing.JMenu menuTaiKhoan;
    private javax.swing.JMenuItem menuTaiKhoan_DangXuat;
    private javax.swing.JMenuItem menuTaiKhoan_ThongTin;
    private javax.swing.JMenu menuThanhCongcu;
    private javax.swing.JMenu menuThoat;
    private javax.swing.JMenu menuTroVe;
    private javax.swing.JMenuBar menubar;
    private javax.swing.JPanel pCenter;
    private javax.swing.JPanel pChiTiet;
    private javax.swing.JPanel pChiTietSanPham;
    private javax.swing.JPanel pChiTietTimKiem;
    private javax.swing.JPanel pThongTin;
    private javax.swing.JPanel pThongTin_ThongTin;
    private javax.swing.JPanel pThongTin_TimKiem;
    private javax.swing.JPanel pTop;
    private javax.swing.JRadioButtonMenuItem rdbtnThongTin_MauCam;
    private javax.swing.JRadioButtonMenuItem rdbtnThongTin_MauDen;
    private javax.swing.JRadioButtonMenuItem rdbtnThongTin_Mautrang;
    private javax.swing.JTable tblThongTin;
    private javax.swing.JTable tblThongTin1;
    private javax.swing.JTextField tfChiTiet_Gia;
    private javax.swing.JTextField tfChiTiet_MaHD;
    private javax.swing.JTextField tfChiTiet_MaSP;
    private javax.swing.JTextField tfChiTiet_MaSP2;
    private javax.swing.JTextField tfChiTiet_MaSP3;
    private javax.swing.JTextField tfChiTiet_SL;
    private javax.swing.JTextField tfChiTiet_SL2;
    private javax.swing.JTextField tfChiTiet_SL3;
    private javax.swing.JTextField tfThongTin_MaNV;
    private javax.swing.JTextField tfThongTin_MaPN;
    private javax.swing.JTextField tfThongTin_TongTien;
    private javax.swing.JTextField tfTimKiem_MaNCC1;
    private javax.swing.JTextField tfTimKiem_MaNV1;
    private javax.swing.JTextField tfTimKiem_MaPN1;
    private javax.swing.JTextField tfTimKiem_TongTien1;
    // End of variables declaration//GEN-END:variables

    
    @Override
    public void mouseClicked(MouseEvent me) {
        JLabel src = (JLabel) me.getSource();
        System.out.println(src.getName() + "is Clicked");
        
    }

    @Override
    public void mousePressed(MouseEvent me) {
        JLabel src = (JLabel) me.getSource();
        System.out.println(src.getName() + "is Pressed");
        src.setIcon(new ImageIcon("./src/ShoesManager/images/Button Menu/150_50/"+src.getName()+" click.png"));
         
    }

    @Override
    public void mouseReleased(MouseEvent me) {
        JLabel src = (JLabel) me.getSource();
        System.out.println(src.getName() + "is Entered");
        src.setIcon(new ImageIcon("./src/ShoesManager/images/Button Menu/150_50/"+src.getName()+" hover.png"));
    
        // xử lý nút trở về
        if ( src.getName().equals("Trở về") ) {
            Home home;
            try {
                home = new Home();
                home.setVisible(true);
                setVisible(false);
            } catch (Exception e) {
                System.out.println("Lỗi");
            }
        }
        
        if ( src.getName().equals("Khuyến mãi") ) 
                try {
                    KhuyenMai dm;
                    dm = new KhuyenMai();
                    dm.setVisible(true);
                    setVisible(false);
                } catch (Exception ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                } 
        
        if ( src.getName().equals("Hóa đơn") ) 
                try {
                    HoaDon hd;
                    hd = new HoaDon();
                    hd.setVisible(true);
                    setVisible(false);
                } catch (Exception ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
        
        if ( src.getName().equals("Hàng hóa") ) 
                try {
                    Sanpham hd = new Sanpham();
                    hd.setVisible(true);
                    setVisible(false);
                } catch (Exception ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
        
        if ( src.getName().equals("Thống kê") ) 
                try {
                    ThongKe hd;
                    hd = new ThongKe();
                    hd.setVisible(true);
                    setVisible(false);
                } catch (Exception ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
        
        if ( src.getName().equals("Excel") ) 
                try {
                    Excel hd;
                    hd = new Excel();
                    hd.setVisible(true);
                    setVisible(false);
                } catch (Exception ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
    }

    @Override
    public void mouseEntered(MouseEvent me) {
        JLabel src = (JLabel) me.getSource();
        System.out.println(src.getName() + "is Entered");
        src.setIcon(new ImageIcon("./src/ShoesManager/images/Button Menu/150_50/"+src.getName()+" hover.png"));
           
    }

    @Override
    public void mouseExited(MouseEvent me) {
        JLabel src = (JLabel) me.getSource();
        System.out.println(src.getName() + "is Exited");
        src.setIcon(new ImageIcon("./src/ShoesManager/images/Button Menu/150_50/"+src.getName()+".png"));
         
    }
}
