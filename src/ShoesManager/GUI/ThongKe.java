package ShoesManager.GUI;

import ShoesManager.BUS.HoaDonBUS;
import ShoesManager.BUS.PhieuNhapBUS;
import ShoesManager.DTO.HoaDonDTO;
import ShoesManager.DTO.PhieuNhapDTO;
import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class ThongKe extends javax.swing.JFrame implements MouseListener {

    public ThongKe() throws Exception {
        this.setUndecorated(true);

        init();
        initComponents();
        // các hàm xử lý sau khi vào
        kiemTraCapBac();
        colordefault();
        actionButtondisplayHoaDon();
        actionButtondisplayPhieuNhap();
        if (!Memory.flag_Menu) {
            pTop.setVisible(false);
            menuThanhCongcu.setText("Hiện thanh công cụ");
        }
    }

    private Color colorPanel_Top, colorPanel_Center, colorText;
    private JLabel[] listLblTop;
    private String[] strArr_Top;
    private DefaultTableModel model;
    private HoaDonBUS list_HD;
    private PhieuNhapBUS list_TK;

    public void init() throws Exception {
        colorPanel_Top = Memory.colorThemes;
        colorPanel_Center = Memory.colorThemes_2;
        colorText = Memory.colorText;
        list_HD = new HoaDonBUS();
        list_TK = new PhieuNhapBUS();
        strArr_Top = new String[10];
        strArr_Top[0] = "Hóa đơn";
        strArr_Top[1] = "Khuyến mãi";
        strArr_Top[2] = "Nhập hàng";
        strArr_Top[3] = "Hàng hóa";
        strArr_Top[4] = "Thống kê";
        strArr_Top[5] = "Excel";
        strArr_Top[6] = "Trở về";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup_MauNen = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        pCenter = new javax.swing.JPanel();
        pChiTiet = new javax.swing.JPanel();
        lblChiTiet_ChiTietHoaDon = new javax.swing.JLabel();
        pChiTietTimKiem = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        btnThongKe = new javax.swing.JButton();
        lblMuiTen2 = new javax.swing.JLabel();
        ThongKe_dateFrom = new com.toedter.calendar.JDateChooser();
        ThongKe_dateTo = new com.toedter.calendar.JDateChooser();
        cbbQuy = new javax.swing.JComboBox<>();
        YearChooser_Nam = new com.toedter.calendar.JYearChooser();
        rdbThongKe_Ngay = new javax.swing.JRadioButton();
        rdbThongKe_Quy = new javax.swing.JRadioButton();
        rdbThongKe_Thang = new javax.swing.JRadioButton();
        rdbThongKe_Nam = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        YearChooser_NamQuy = new com.toedter.calendar.JYearChooser();
        jLabel2 = new javax.swing.JLabel();
        YearChooser_NamThang = new com.toedter.calendar.JYearChooser();
        cbbMonth = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblThongKe_HoaDon = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblThongKe_PhieuNhap = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        pTop = createPanel_LblTop(strArr_Top);
        menubar = new javax.swing.JMenuBar();
        menuTaiKhoan = new javax.swing.JMenu();
        menuTaiKhoan_ThongTin = new javax.swing.JMenuItem();
        menuTaiKhoan_DangXuat = new javax.swing.JMenuItem();
        menuThanhCongcu = new javax.swing.JMenu();
        MenuMauNen = new javax.swing.JMenu();
        rdbtnThongTin_MauCam = new javax.swing.JRadioButtonMenuItem();
        rdbtnThongTin_MauDen = new javax.swing.JRadioButtonMenuItem();
        rdbtnThongTin_Mautrang = new javax.swing.JRadioButtonMenuItem();
        menuTroVe = new javax.swing.JMenu();
        menuThoat = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));

        pCenter.setBackground(colorPanel_Center);
        pCenter.setPreferredSize(new java.awt.Dimension(1280, 600));

        pChiTiet.setBackground(colorPanel_Center);
        pChiTiet.setBorder(javax.swing.BorderFactory.createLineBorder(colorPanel_Top, 5));
        pChiTiet.setPreferredSize(new java.awt.Dimension(1239, 569));

        lblChiTiet_ChiTietHoaDon.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblChiTiet_ChiTietHoaDon.setForeground(colorText);
        lblChiTiet_ChiTietHoaDon.setText("Thống Kê");

        pChiTietTimKiem.setBackground(colorPanel_Center);
        pChiTietTimKiem.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Doanh Thu", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 18), colorText)); // NOI18N
        pChiTietTimKiem.setForeground(colorText);
        pChiTietTimKiem.setPreferredSize(new java.awt.Dimension(500, 238));

        jButton4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton4.setText("Hủy Thống Kê");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton5.setText("Trống");

        btnThongKe.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnThongKe.setText("Thống Kê");
        btnThongKe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThongKeMouseClicked(evt);
            }
        });

        lblMuiTen2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblMuiTen2.setForeground(colorText);
        lblMuiTen2.setText("->");

        ThongKe_dateFrom.setDateFormatString("dd / MM / yyyy");

        ThongKe_dateTo.setDateFormatString("dd / MM / yyyy");

        cbbQuy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quý 1", "Quý 2", "Quý 3", "Quý 4" }));
        cbbQuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbQuyActionPerformed(evt);
            }
        });

        rdbThongKe_Ngay.setBackground(colorPanel_Center);
        buttonGroup2.add(rdbThongKe_Ngay);
        rdbThongKe_Ngay.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        rdbThongKe_Ngay.setForeground(colorText);
        rdbThongKe_Ngay.setSelected(true);
        rdbThongKe_Ngay.setText("Từ Ngày");

        rdbThongKe_Quy.setBackground(colorPanel_Center);
        buttonGroup2.add(rdbThongKe_Quy);
        rdbThongKe_Quy.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        rdbThongKe_Quy.setForeground(colorText);
        rdbThongKe_Quy.setText("Theo Quý");

        rdbThongKe_Thang.setBackground(colorPanel_Center);
        buttonGroup2.add(rdbThongKe_Thang);
        rdbThongKe_Thang.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        rdbThongKe_Thang.setForeground(colorText);
        rdbThongKe_Thang.setText("Theo Tháng");

        rdbThongKe_Nam.setBackground(colorPanel_Center);
        buttonGroup2.add(rdbThongKe_Nam);
        rdbThongKe_Nam.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        rdbThongKe_Nam.setForeground(colorText);
        rdbThongKe_Nam.setText("Theo Năm");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setForeground(colorText);
        jLabel1.setText("Năm");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(colorText);
        jLabel2.setText("Năm");

        cbbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel7.setForeground(colorText);
        jLabel7.setText("Tổng Thu:");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setForeground(colorText);
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setForeground(colorText);
        jLabel8.setText("Tổng Chi:");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel9.setForeground(colorText);
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel11.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel11.setForeground(colorText);
        jLabel11.setText("Lợi nhuận:");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel10.setForeground(colorText);
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout pChiTietTimKiemLayout = new javax.swing.GroupLayout(pChiTietTimKiem);
        pChiTietTimKiem.setLayout(pChiTietTimKiemLayout);
        pChiTietTimKiemLayout.setHorizontalGroup(
            pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChiTietTimKiemLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pChiTietTimKiemLayout.createSequentialGroup()
                        .addComponent(btnThongKe)
                        .addGap(84, 84, 84)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addGap(45, 45, 45))
                    .addGroup(pChiTietTimKiemLayout.createSequentialGroup()
                        .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rdbThongKe_Ngay, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdbThongKe_Quy, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdbThongKe_Thang, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdbThongKe_Nam, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(23, 23, 23)
                        .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pChiTietTimKiemLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pChiTietTimKiemLayout.createSequentialGroup()
                                        .addComponent(ThongKe_dateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblMuiTen2))
                                    .addGroup(pChiTietTimKiemLayout.createSequentialGroup()
                                        .addComponent(cbbQuy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(48, 48, 48)
                                        .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(YearChooser_Nam, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ThongKe_dateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(YearChooser_NamQuy, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(YearChooser_NamThang, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(49, Short.MAX_VALUE))))
            .addGroup(pChiTietTimKiemLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pChiTietTimKiemLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(16, 16, 16)
                        .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pChiTietTimKiemLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pChiTietTimKiemLayout.setVerticalGroup(
            pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChiTietTimKiemLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(rdbThongKe_Ngay)
                        .addComponent(lblMuiTen2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(ThongKe_dateFrom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ThongKe_dateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rdbThongKe_Quy)
                        .addComponent(cbbQuy, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                        .addComponent(YearChooser_NamQuy, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rdbThongKe_Thang)
                        .addComponent(cbbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(YearChooser_NamThang, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(YearChooser_Nam, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdbThongKe_Nam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThongKe)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(80, 80, 80)
                .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(pChiTietTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );

        jPanel1.setBackground(colorPanel_Center);

        tblThongKe_HoaDon.setAutoCreateRowSorter(true);
        tblThongKe_HoaDon.setBackground(new java.awt.Color(204, 204, 204));
        tblThongKe_HoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Mã HĐ", "Số Lượng", "Giá Bán"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblThongKe_HoaDon.setGridColor(new java.awt.Color(102, 255, 102));
        tblThongKe_HoaDon.setSelectionBackground(new java.awt.Color(153, 153, 153));
        tblThongKe_HoaDon.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane3.setViewportView(tblThongKe_HoaDon);
        if (tblThongKe_HoaDon.getColumnModel().getColumnCount() > 0) {
            tblThongKe_HoaDon.getColumnModel().getColumn(0).setPreferredWidth(60);
            tblThongKe_HoaDon.getColumnModel().getColumn(1).setPreferredWidth(60);
            tblThongKe_HoaDon.getColumnModel().getColumn(2).setPreferredWidth(60);
            tblThongKe_HoaDon.getColumnModel().getColumn(3).setPreferredWidth(60);
        }

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(colorText);
        jLabel4.setText("Bảng Hóa Đơn(Tiền Thu)");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Bảng Phiếu Nhập(Tiền Chi)");

        tblThongKe_PhieuNhap.setBackground(new java.awt.Color(204, 204, 204));
        tblThongKe_PhieuNhap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Mã HĐ", "Số Lượng", "Giá Bán"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblThongKe_PhieuNhap.setGridColor(new java.awt.Color(102, 255, 102));
        tblThongKe_PhieuNhap.setSelectionBackground(new java.awt.Color(153, 153, 153));
        tblThongKe_PhieuNhap.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane4.setViewportView(tblThongKe_PhieuNhap);
        if (tblThongKe_PhieuNhap.getColumnModel().getColumnCount() > 0) {
            tblThongKe_PhieuNhap.getColumnModel().getColumn(0).setPreferredWidth(60);
            tblThongKe_PhieuNhap.getColumnModel().getColumn(1).setPreferredWidth(60);
            tblThongKe_PhieuNhap.getColumnModel().getColumn(2).setPreferredWidth(60);
            tblThongKe_PhieuNhap.getColumnModel().getColumn(3).setPreferredWidth(60);
        }

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setForeground(colorText);
        jLabel12.setText("Tiền HD cao nhất:");

        jLabel13.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel13.setForeground(colorText);
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setForeground(colorText);
        jLabel14.setText("Tiền HD thấp nhất:");

        jLabel15.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel15.setForeground(colorText);
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabel16.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel16.setForeground(colorText);
        jLabel16.setText("Trung Bình HD:");
        jLabel16.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel17.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel17.setForeground(colorText);
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabel18.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel18.setForeground(colorText);
        jLabel18.setText("Tiền PN cao nhất:");

        jLabel19.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel19.setForeground(colorText);
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabel20.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel20.setForeground(colorText);
        jLabel20.setText("Tiền PN thấp nhất:");

        jLabel21.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel21.setForeground(colorText);
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabel22.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel22.setForeground(colorText);
        jLabel22.setText("Trung Bình PN:");
        jLabel22.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel23.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel23.setForeground(colorText);
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(193, 193, 193)
                                .addComponent(jLabel4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(195, 195, 195)
                                .addComponent(jLabel5)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
                            .addComponent(jScrollPane3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(16, 16, 16)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel22)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addGap(16, 16, 16)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(jLabel20))))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout pChiTietLayout = new javax.swing.GroupLayout(pChiTiet);
        pChiTiet.setLayout(pChiTietLayout);
        pChiTietLayout.setHorizontalGroup(
            pChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChiTietLayout.createSequentialGroup()
                .addGroup(pChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pChiTietLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pChiTietTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pChiTietLayout.createSequentialGroup()
                        .addGap(530, 530, 530)
                        .addComponent(lblChiTiet_ChiTietHoaDon)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        pChiTietLayout.setVerticalGroup(
            pChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pChiTietLayout.createSequentialGroup()
                .addComponent(lblChiTiet_ChiTietHoaDon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pChiTietTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE))
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout pCenterLayout = new javax.swing.GroupLayout(pCenter);
        pCenter.setLayout(pCenterLayout);
        pCenterLayout.setHorizontalGroup(
            pCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pCenterLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(pChiTiet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        pCenterLayout.setVerticalGroup(
            pCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pCenterLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(pChiTiet, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(pCenter, java.awt.BorderLayout.CENTER);

        pTop.setBackground(colorPanel_Top);
        pTop.setPreferredSize(new java.awt.Dimension(1280, 70));
        getContentPane().add(pTop, java.awt.BorderLayout.NORTH);

        menuTaiKhoan.setText("Tài khoản");

        menuTaiKhoan_ThongTin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ShoesManager/images/user.png"))); // NOI18N
        menuTaiKhoan_ThongTin.setText("Thông tin");
        menuTaiKhoan_ThongTin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                menuTaiKhoan_ThongTinMouseReleased(evt);
            }
        });
        menuTaiKhoan.add(menuTaiKhoan_ThongTin);

        menuTaiKhoan_DangXuat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ShoesManager/images/logout.png"))); // NOI18N
        menuTaiKhoan_DangXuat.setText("Đăng xuất");
        menuTaiKhoan_DangXuat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                menuTaiKhoan_DangXuatMouseReleased(evt);
            }
        });
        menuTaiKhoan.add(menuTaiKhoan_DangXuat);

        menubar.add(menuTaiKhoan);

        menuThanhCongcu.setText("Ẩn thanh công cụ");
        menuThanhCongcu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuThanhCongcuMouseClicked(evt);
            }
        });
        menubar.add(menuThanhCongcu);

        MenuMauNen.setText("Màu nền");

        buttonGroup_MauNen.add(rdbtnThongTin_MauCam);
        rdbtnThongTin_MauCam.setSelected(true);
        rdbtnThongTin_MauCam.setText("Màu cam/ trắng");
        rdbtnThongTin_MauCam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rdbtnThongTin_MauCamMouseReleased(evt);
            }
        });
        rdbtnThongTin_MauCam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnThongTin_MauCamActionPerformed(evt);
            }
        });
        MenuMauNen.add(rdbtnThongTin_MauCam);

        buttonGroup_MauNen.add(rdbtnThongTin_MauDen);
        rdbtnThongTin_MauDen.setText("Màu đen/ đen");
        rdbtnThongTin_MauDen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rdbtnThongTin_MauDenMouseReleased(evt);
            }
        });
        rdbtnThongTin_MauDen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnThongTin_MauDenActionPerformed(evt);
            }
        });
        MenuMauNen.add(rdbtnThongTin_MauDen);

        buttonGroup_MauNen.add(rdbtnThongTin_Mautrang);
        rdbtnThongTin_Mautrang.setText("Màu trắng/ xanh");
        rdbtnThongTin_Mautrang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rdbtnThongTin_MautrangMouseReleased(evt);
            }
        });
        rdbtnThongTin_Mautrang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnThongTin_MautrangActionPerformed(evt);
            }
        });
        MenuMauNen.add(rdbtnThongTin_Mautrang);

        menubar.add(MenuMauNen);

        menuTroVe.setText("Trở về");
        menuTroVe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuTroVeMouseClicked(evt);
            }
        });
        menubar.add(menuTroVe);

        menuThoat.setText("Thoát");
        menuThoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuThoatMouseClicked(evt);
            }
        });
        menubar.add(menuThoat);

        setJMenuBar(menubar);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void rdbtnThongTin_MautrangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtnThongTin_MautrangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbtnThongTin_MautrangActionPerformed

    private void rdbtnThongTin_MauDenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtnThongTin_MauDenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbtnThongTin_MauDenActionPerformed

    private void rdbtnThongTin_MauCamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtnThongTin_MauCamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbtnThongTin_MauCamActionPerformed

    private void rdbtnThongTin_MauCamMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdbtnThongTin_MauCamMouseReleased
        Memory.colorThemes = new Color(250, 160, 100);
        Memory.colorThemes_2 = new Color(255, 255, 255);
        Memory.colorText = new Color(0, 0, 0);
        colorPanel_Top = Memory.colorThemes;
        colorPanel_Center = Memory.colorThemes_2;
        colorText = Memory.colorText;
        setTextColor("đen");
        System.out.println("da thay doi mau nen thanh cam trang");        // TODO add your handling code here:
    }//GEN-LAST:event_rdbtnThongTin_MauCamMouseReleased

    private void rdbtnThongTin_MauDenMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdbtnThongTin_MauDenMouseReleased
        // TODO add your handling code here:
        Memory.colorThemes = new Color(0, 0, 0);
        Memory.colorThemes_2 = new Color(0, 0, 0);
        Memory.colorText = new Color(255, 255, 255);
        colorPanel_Top = Memory.colorThemes;
        colorPanel_Center = Memory.colorThemes_2;
        colorText = Memory.colorText;
        setTextColor("trắng");
        System.out.println("da thay doi mau nen thanh den");
    }//GEN-LAST:event_rdbtnThongTin_MauDenMouseReleased

    private void rdbtnThongTin_MautrangMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdbtnThongTin_MautrangMouseReleased
        // TODO add your handling code here:
        Memory.colorThemes = new Color(255, 255, 255);
        Memory.colorThemes_2 = new Color(131, 189, 246);
        Memory.colorText = new Color(0, 0, 0);
        colorPanel_Top = Memory.colorThemes;
        colorPanel_Center = Memory.colorThemes_2;
        colorText = Memory.colorText;
        setTextColor("đen");
        System.out.println("da thay doi mau nen thanh trang");
    }//GEN-LAST:event_rdbtnThongTin_MautrangMouseReleased

    private void menuThanhCongcuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuThanhCongcuMouseClicked
        // TODO add your handling code here:
        if (Memory.flag_Menu) {
            pTop.setVisible(false);
            menuThanhCongcu.setText("Hiện thanh công cụ");
            Memory.flag_Menu = false;
        } else {
            pTop.setVisible(true);
            menuThanhCongcu.setText("Ẩn thanh công cụ");
            Memory.flag_Menu = true;
        }
    }//GEN-LAST:event_menuThanhCongcuMouseClicked

    private void menuTroVeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTroVeMouseClicked
        // TODO add your handling code here:
        Home home;
        try {
            home = new Home();
            home.setVisible(true);
            setVisible(false);
        } catch (Exception e) {
            System.out.println("Lỗi");
        }
    }//GEN-LAST:event_menuTroVeMouseClicked

    private void menuTaiKhoan_ThongTinMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTaiKhoan_ThongTinMouseReleased
        // TODO add your handling code here:
        UserInfor ui = new UserInfor();
        ui.setVisible(true);
    }//GEN-LAST:event_menuTaiKhoan_ThongTinMouseReleased

    private void menuTaiKhoan_DangXuatMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTaiKhoan_DangXuatMouseReleased
        // TODO add your handling code here:
        Login lg;
        try {
            lg = new Login();
            lg.setVisible(true);
            this.setVisible(false);
        } catch (Exception ex) {
            Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menuTaiKhoan_DangXuatMouseReleased

    private void menuThoatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuThoatMouseClicked
        // TODO add your handling code here:
        Question_YesNO Q = new Question_YesNO("Bạn có muốn thoát không?");
        Q.setVisible(true);
    }//GEN-LAST:event_menuThoatMouseClicked

    private void btnThongKeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThongKeMouseClicked
        try {
            list_HD.docDB();
        } catch (Exception ex) {
            Logger.getLogger(ThongKe.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            list_TK.docDB();
        } catch (Exception ex) {
            Logger.getLogger(ThongKe.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (rdbThongKe_Ngay.isSelected()) {
            String[] s = String.valueOf(ThongKe_dateFrom.getDate()).split("\\ ");
            System.out.println(s[2] + " " + s[1] + " " + s[5]);
            System.out.println(ThongKe_dateFrom.getDate());
            String date1 = s[2] + " " + s[1] + " " + s[5];

            String[] s1 = String.valueOf(ThongKe_dateTo.getDate()).split("\\ ");
            System.out.println(s1[2] + " " + s1[1] + " " + s1[5]);
            System.out.println(ThongKe_dateFrom.getDate());
            String date2 = s1[2] + " " + s1[1] + " " + s1[5];
         
        }
        if (rdbThongKe_Quy.isSelected()) {
            String Start_quy1 = null;
            String End_quy1 = null;
            int NamQuy;
            if (cbbQuy.getSelectedItem().equals("Quý 1")) {
                Start_quy1 = "1 Jan";
                End_quy1 = "31 Mar";

            } else {
                if (cbbQuy.getSelectedItem().equals("Quý 2")) {
                    Start_quy1 = "1 Apr";
                    End_quy1 = "30 Jun";
                } else {
                    if (cbbQuy.getSelectedItem().equals("Quý 3")) {
                        Start_quy1 = "1 Jul";
                        End_quy1 = "30 Sep";
                    } else {
                        Start_quy1 = "1 Oct";
                        End_quy1 = "31 Dec";
                    }
                }
            }
            NamQuy = YearChooser_NamQuy.getYear();
            System.out.println(NamQuy);
            String date1 = Start_quy1 + " " + NamQuy;
            String date2 = End_quy1 + " " + NamQuy;
            System.out.println(date1);
            System.out.println(date2);
            thongke(date1, date2);

        }
        if (rdbThongKe_Thang.isSelected()) {
            int NamThang;
            String month;
            if (cbbMonth.getSelectedItem().equals("Jan")) {
                month = "Jan";
            } else {
                if (cbbMonth.getSelectedItem().equals("Feb")) {
                    month = "Feb";
                } else {
                    if (cbbMonth.getSelectedItem().equals("Mar")) {
                        month = "Mar";
                    } else {
                        if (cbbMonth.getSelectedItem().equals("Apr")) {
                            month = "Apr";
                        } else {
                            if (cbbMonth.getSelectedItem().equals("May")) {
                                month = "May";
                            } else {
                                if (cbbMonth.getSelectedItem().equals("Jun")) {
                                    month = "Jun";
                                } else {
                                    if (cbbMonth.getSelectedItem().equals("Jul")) {
                                        month = "Jul";
                                    } else {
                                        if (cbbMonth.getSelectedItem().equals("Aug")) {
                                            month = "Aug";
                                        } else {
                                            if (cbbMonth.getSelectedItem().equals("Sep")) {
                                                month = "Sep";
                                            } else {
                                                if (cbbMonth.getSelectedItem().equals("Oct")) {
                                                    month = "Oct";
                                                } else {
                                                    if (cbbMonth.getSelectedItem().equals("Nov")) {
                                                        month = "Nov";
                                                    } else {
                                                        month = "Dec";
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            NamThang = YearChooser_NamThang.getYear();
            System.out.println(NamThang);
            String monthyear = month + " " + NamThang;
            System.out.println(monthyear);
        }

        if (rdbThongKe_Nam.isSelected()) {
            int nam = YearChooser_Nam.getYear();
            String year = "" + nam;
            System.out.println(year);
            thongkenam(year);
        }

        System.out.println("ưhatups");
        actionButtondisplayHoaDon();
        actionButtondisplayPhieuNhap();
    }//GEN-LAST:event_btnThongKeMouseClicked

    private void thongke(String date1, String date2) {
        CacHamQuanTrong ok = new CacHamQuanTrong();
        if (ok.kiemTraDate(date1, date2)) {
            ArrayList<HoaDonDTO> arr = new ArrayList<>();
            ArrayList<PhieuNhapDTO> arr1 = new ArrayList<>();
            HoaDonDTO hd = new HoaDonDTO();
            PhieuNhapDTO pn = new PhieuNhapDTO();
            try {
                list_HD.docDB();
            } catch (Exception ex) {
                Logger.getLogger(ThongKe.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                list_TK.docDB();
            } catch (Exception ex) {
                Logger.getLogger(ThongKe.class.getName()).log(Level.SEVERE, null, ex);
            }
            double tongtienThu = 0;
            double maxtien=0;
            double mintien=0;
            int dem=0;
            for (int i = 0; i < list_HD.getNumbHoaDon(); i++) {
                hd = list_HD.getInfor(i);
                String sXuat = hd.getStrNgayBan();

                System.out.println("ngay bat dau" + date1);
                System.out.println("ngay hoa don" + hd.getStrNgayBan());
                System.out.println("ngay ket thuc" + date2);
                if (ok.kiemTraDate(date1, sXuat)
                        && ok.kiemTraDate(sXuat, date2)) {
                    double tien = hd.getTongTien();
                    tongtienThu = tongtienThu + tien;
                    if(tien>maxtien) maxtien=tien; else mintien=tien;
                    dem=dem+1;
                    arr.add(hd);
                    System.out.println(arr);
                }
            }
            double tongtienChi = 0;
            double maxtien1=0;
            double mintien1=0;
            int dem1=0;
            for (int i = 0; i < list_TK.getNumb(); i++) {
                pn = list_TK.getInfor(i);
                String sNhap = pn.getStrNgayNhap();
                System.out.println("ngay bat dau" + date1);
                System.out.println("ngay hoa don" + pn.getStrNgayNhap());
                System.out.println("ngay ket thuc" + date2);
                if (ok.kiemTraDate(date1, sNhap)
                        && ok.kiemTraDate(sNhap, date2)) {
                    double tien = pn.getTongTien();
                    tongtienChi = tongtienChi + tien;
                    if(tien>maxtien1) maxtien1=tien; else mintien1=tien;
                    dem1=dem1+1;
                    arr1.add(pn);
                    System.out.println(arr1);
                }
            }
            String tien2 = "" + tongtienThu;
            String tien3 = "" + tongtienChi;
            double ln = tongtienThu - tongtienChi;
            String loinhuan = "" + ln;
            jLabel3.setText(tien2);
            jLabel9.setText(tien3);
            jLabel10.setText(loinhuan);
            jLabel13.setText(String.valueOf(maxtien));
            jLabel15.setText(String.valueOf(mintien));
            jLabel17.setText(String.valueOf(Math.round((tongtienThu/dem)*1000.0)/1000.0));
            jLabel19.setText(String.valueOf(maxtien1));
            jLabel21.setText(String.valueOf(mintien1));
            jLabel23.setText(String.valueOf(Math.round((tongtienChi/dem1)*1000.0)/1000.0));
            list_HD.setList_HD(arr);
            list_TK.setList_TK(arr1);
        } else {
            System.out.println("ko dc");
        }
    }

    private void thongkethang(String monthyear) {
        CacHamQuanTrong ok = new CacHamQuanTrong();
        ArrayList<HoaDonDTO> arr = new ArrayList<>();
        ArrayList<PhieuNhapDTO> arr1 = new ArrayList<>();
        HoaDonDTO hd = new HoaDonDTO();
        PhieuNhapDTO pn = new PhieuNhapDTO();
        try {
            list_HD.docDB();
        } catch (Exception ex) {
            Logger.getLogger(ThongKe.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            list_TK.docDB();
        } catch (Exception ex) {
            Logger.getLogger(ThongKe.class.getName()).log(Level.SEVERE, null, ex);
        }
        double tongtienThu = 0;
        double maxtien=0;
            double mintien=0;
            int dem=0;
        for (int i = 0; i < list_HD.getNumbHoaDon(); i++) {
            hd = list_HD.getInfor(i);
            String sXuat = hd.getStrNgayBan();
            if (ok.kiemtrathang(monthyear, sXuat)) {
                double tien = hd.getTongTien();
                tongtienThu = tongtienThu + tien;
                if(tien>maxtien) maxtien=tien; else mintien=tien;
                    dem=dem+1;
                arr.add(hd);
                System.out.println(arr);
            }
        }
        double tongtienChi = 0;
        double maxtien1=0;
            double mintien1=0;
            int dem1=0;
        for (int i = 0; i < list_TK.getNumb(); i++) {
            pn = list_TK.getInfor(i);
            String sNhap = pn.getStrNgayNhap();
            if (ok.kiemtrathang(monthyear, sNhap)) {
                double tien = pn.getTongTien();
                tongtienChi = tongtienChi + tien;
                if(tien>maxtien1) maxtien1=tien; else mintien1=tien;
                    dem1=dem1+1;
                arr1.add(pn);
                System.out.println(arr1);
            }
        }
        String tien2 = "" + tongtienThu;
        String tien3 = "" + tongtienChi;
        double ln = tongtienThu - tongtienChi;
        String loinhuan = "" + ln;
        jLabel3.setText(tien2);
        jLabel9.setText(tien3);
        jLabel10.setText(loinhuan);
        jLabel13.setText(String.valueOf(maxtien));
        jLabel15.setText(String.valueOf(mintien));
        jLabel17.setText(String.valueOf(Math.round((tongtienThu/dem)*1000.0)/1000.0));
        jLabel19.setText(String.valueOf(maxtien1));
        jLabel21.setText(String.valueOf(mintien1));
        jLabel23.setText(String.valueOf(Math.round((tongtienChi/dem1)*1000.0)/1000.0));
        list_HD.setList_HD(arr);
        list_TK.setList_TK(arr1);
    }

    private void thongkenam(String year) {
        CacHamQuanTrong ok = new CacHamQuanTrong();
        ArrayList<HoaDonDTO> arr = new ArrayList<>();
        ArrayList<PhieuNhapDTO> arr1 = new ArrayList<>();
        HoaDonDTO hd = new HoaDonDTO();
        PhieuNhapDTO pn = new PhieuNhapDTO();
        try {
            list_HD.docDB();
        } catch (Exception ex) {
            Logger.getLogger(ThongKe.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            list_TK.docDB();
        } catch (Exception ex) {
            Logger.getLogger(ThongKe.class.getName()).log(Level.SEVERE, null, ex);
        }
        double tongtienThu = 0;
        double maxtien=0;
            double mintien=0;
            int dem=0;
        for (int i = 0; i < list_HD.getNumbHoaDon(); i++) {
            hd = list_HD.getInfor(i);
            String sXuat = hd.getStrNgayBan();
            if (ok.kiemtranam(year, sXuat)) {
                double tien = hd.getTongTien();
                tongtienThu = tongtienThu + tien;
                if(tien>maxtien) maxtien=tien; else mintien=tien;
                    dem=dem+1;
                arr.add(hd);
                System.out.println(arr);
            }
        }
        double tongtienChi = 0;
        double maxtien1=0;
            double mintien1=0;
            int dem1=0;
        for (int i = 0; i < list_TK.getNumb(); i++) {
            pn = list_TK.getInfor(i);
            String sNhap = pn.getStrNgayNhap();
            if (ok.kiemtranam(year, sNhap)) {
                double tien = pn.getTongTien();
                tongtienChi = tongtienChi + tien;
                if(tien>maxtien1) maxtien1=tien; else mintien1=tien;
                    dem1=dem1+1;
                arr1.add(pn);
                System.out.println(arr1);
            }
        }
        String tien2 = "" + tongtienThu;
        String tien3 = "" + tongtienChi;
        double ln = tongtienThu - tongtienChi;
        String loinhuan = "" + ln;
        jLabel3.setText(tien2);
        jLabel9.setText(tien3);
        jLabel10.setText(loinhuan);
        jLabel13.setText(String.valueOf(maxtien));
        jLabel15.setText(String.valueOf(mintien));
        jLabel17.setText(String.valueOf(Math.round((tongtienThu/dem)*1000.0)/1000.0));
        jLabel19.setText(String.valueOf(maxtien1));
        jLabel21.setText(String.valueOf(mintien1));
        jLabel23.setText(String.valueOf(Math.round((tongtienChi/dem1)*1000.0)/1000.0));
        list_HD.setList_HD(arr);
        list_TK.setList_TK(arr1);
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            // TODO add your handling code here:
            list_HD.docDB();
        } catch (Exception ex) {
            Logger.getLogger(ThongKe.class.getName()).log(Level.SEVERE, null, ex);
        }
        actionButtondisplayHoaDon();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void cbbQuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbQuyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbQuyActionPerformed

    /**
     * Hàm kiểm tra xem cập bậc của nó 1 : Admin FULL POWER 2 : Nhập xuất file
     * Excel và Thống Kê 3 : Kiểm tra hàng hóa 4 : Nhập Hàng 5 : Khuyến mãi 6 :
     * Hóa đơn
     */
    public void kiemTraCapBac() {
        // truyền tham số cấp bậc chức vụ vào
        int iKey = Memory.iCapBac;

        if (iKey != 1) {
            for (int i = 0; i < strArr_Top.length; i++) {
                listLblTop[i].setVisible(false);
            }
        }

        switch (iKey) {
            case 2:
                listLblTop[6].setVisible(true);
                listLblTop[5].setVisible(true);
                listLblTop[4].setVisible(true);
                break;
            case 3:
                listLblTop[6].setVisible(true);
                listLblTop[3].setVisible(true);
                break;
            case 4:
                listLblTop[6].setVisible(true);
                listLblTop[2].setVisible(true);
                break;
            case 5:
                listLblTop[6].setVisible(true);
                listLblTop[1].setVisible(true);
                break;
            case 6:
                listLblTop[6].setVisible(true);
                listLblTop[0].setVisible(true);
                break;
        }
    }

    private void createVectorHeader() {
        if (model.getRowCount() == 0) {
            Vector<String> header = new Vector();
            header.add("Mã HĐ");
            header.add("Mã KH");
            header.add("Mã NV");
            //header.add("Mã KM");
            header.add("Ngày Bán");
            header.add("Tổng Tiền");

            model = new DefaultTableModel(header, 0) {
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return false;
                }
            };;
        }
    }

    private void actionButtondisplayHoaDon() {
        model = new DefaultTableModel();

        createVectorHeader();
        for (int i = 0; i < list_HD.getNumbHoaDon(); i++) {
            HoaDonDTO hd = new HoaDonDTO();

            hd = list_HD.getInfor(i);

            createVectorHeader();

            Vector row = new Vector();
            row.add(hd.getStrMaHD());
            row.add(hd.getStrMaKH());
            row.add(hd.getStrMaNV());
            row.add(hd.getStrNgayBan());
            row.add(hd.getTongTien());

            model.addRow(row);
        }

        tblThongKe_HoaDon.setModel(model);
    }

    private void createVectorHeaderPN() {
        if (model.getRowCount() == 0) {
            Vector<String> header = new Vector();
            header.add("Mã PN");
            header.add("Mã NV");
            header.add("Mã NCC");
            header.add("Ngày Nhap");
            header.add("Tổng Tiền");

            model = new DefaultTableModel(header, 0) {
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return false;
                }
            };;
        }
    }

    private void actionButtondisplayPhieuNhap() {
        model = new DefaultTableModel();

        createVectorHeaderPN();
        for (int i = 0; i < list_TK.getNumb(); i++) {
            PhieuNhapDTO pn = new PhieuNhapDTO();

            pn = list_TK.getInfor(i);

            createVectorHeaderPN();

            Vector row = new Vector();
            row.add(pn.getStrMaPN());
            row.add(pn.getStrMaNV());
            row.add(pn.getStrMaNCC());
            row.add(pn.getStrNgayNhap());
            row.add(pn.getTongTien());

            model.addRow(row);
        }

        tblThongKe_PhieuNhap.setModel(model);
    }

    private JPanel createPanel_LblTop(String[] strArr_Top) {
        JPanel Panel = new JPanel();
        listLblTop = new JLabel[10];

        Panel.setLayout(new FlowLayout(0, 30, 10));
        Panel.setBackground(colorPanel_Top);

        for (int i = 0; i < strArr_Top.length; i++) {
            listLblTop[i] = new JLabel(new ImageIcon("./src/ShoesManager/images/Button Menu/150_50/" + strArr_Top[i] + ".png"));
            listLblTop[i].setName(strArr_Top[i]);
            listLblTop[i].setOpaque(true);
            listLblTop[i].addMouseListener(this);
            listLblTop[i].setBackground(colorPanel_Top);

            Panel.add(listLblTop[i]);
        }

        return Panel;
    }

    public void setTextColor(String Mau) {
        
        jLabel3.setForeground(colorText);
        jLabel9.setForeground(colorText);
        jLabel10.setForeground(colorText);
        jLabel7.setForeground(colorText);
        jLabel8.setForeground(colorText);
        jLabel11.setForeground(colorText);
        jLabel1.setForeground(colorText);
        jLabel4.setForeground(colorText);
        jLabel5.setForeground(colorText);
        jLabel2.setForeground(colorText);
        jLabel12.setForeground(colorText);
        jLabel14.setForeground(colorText);
        jLabel16.setForeground(colorText);
        jLabel18.setForeground(colorText);
        jLabel20.setForeground(colorText);
        jLabel22.setForeground(colorText);
        jLabel13.setForeground(colorText);
        jLabel15.setForeground(colorText);
        jLabel17.setForeground(colorText);
        jLabel19.setForeground(colorText);
        jLabel21.setForeground(colorText);
        jLabel23.setForeground(colorText);
        jPanel1.setBackground(colorPanel_Center);
        lblChiTiet_ChiTietHoaDon.setForeground(colorText);
        
        rdbThongKe_Ngay.setForeground(colorText);
        rdbThongKe_Quy.setForeground(colorText);
        rdbThongKe_Thang.setForeground(colorText);
        rdbThongKe_Nam.setForeground(colorText);        
        //-----------------------Đổi màu cho Panel
        pTop.setBackground(colorPanel_Top);
        pCenter.setBackground(colorPanel_Center);
        pChiTiet.setBackground(colorPanel_Center);
        pChiTietTimKiem.setBackground(colorPanel_Center);
        pChiTietTimKiem.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sản Phẩm", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 18), colorText)); // NOI18N

        //---------------------list lbl top
        for (int i = 0; i < strArr_Top.length; i++) {
            listLblTop[i].setBackground(colorPanel_Top);
        }

        //------------------------0Doi963 màu khung
        pChiTiet.setBorder(BorderFactory.createLineBorder(colorPanel_Top, 5));

    }

    public void colordefault() {
        Color color;
        color = new Color(250, 160, 100);
        if (Memory.colorThemes.getRGB() == color.getRGB()) {
            rdbtnThongTin_MauCam.setSelected(true);
        }
        color = new Color(0, 0, 0);
        if (Memory.colorThemes.getRGB() == color.getRGB()) {
            rdbtnThongTin_MauDen.setSelected(true);
        }
        color = new Color(255, 255, 255);
        if (Memory.colorThemes.getRGB() == color.getRGB()) {
            rdbtnThongTin_Mautrang.setSelected(true);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ThongKe().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(ThongKe.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MenuMauNen;
    private com.toedter.calendar.JDateChooser ThongKe_dateFrom;
    private com.toedter.calendar.JDateChooser ThongKe_dateTo;
    private com.toedter.calendar.JYearChooser YearChooser_Nam;
    private com.toedter.calendar.JYearChooser YearChooser_NamQuy;
    private com.toedter.calendar.JYearChooser YearChooser_NamThang;
    private javax.swing.JButton btnThongKe;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup_MauNen;
    private javax.swing.JComboBox<String> cbbMonth;
    private javax.swing.JComboBox<String> cbbQuy;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblChiTiet_ChiTietHoaDon;
    private javax.swing.JLabel lblMuiTen2;
    private javax.swing.JMenu menuTaiKhoan;
    private javax.swing.JMenuItem menuTaiKhoan_DangXuat;
    private javax.swing.JMenuItem menuTaiKhoan_ThongTin;
    private javax.swing.JMenu menuThanhCongcu;
    private javax.swing.JMenu menuThoat;
    private javax.swing.JMenu menuTroVe;
    private javax.swing.JMenuBar menubar;
    private javax.swing.JPanel pCenter;
    private javax.swing.JPanel pChiTiet;
    private javax.swing.JPanel pChiTietTimKiem;
    private javax.swing.JPanel pTop;
    private javax.swing.JRadioButton rdbThongKe_Nam;
    private javax.swing.JRadioButton rdbThongKe_Ngay;
    private javax.swing.JRadioButton rdbThongKe_Quy;
    private javax.swing.JRadioButton rdbThongKe_Thang;
    private javax.swing.JRadioButtonMenuItem rdbtnThongTin_MauCam;
    private javax.swing.JRadioButtonMenuItem rdbtnThongTin_MauDen;
    private javax.swing.JRadioButtonMenuItem rdbtnThongTin_Mautrang;
    private javax.swing.JTable tblThongKe_HoaDon;
    private javax.swing.JTable tblThongKe_PhieuNhap;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent me) {
        JLabel src = (JLabel) me.getSource();
        System.out.println(src.getName() + "is Clicked");

    }

    @Override
    public void mousePressed(MouseEvent me) {
        JLabel src = (JLabel) me.getSource();
        System.out.println(src.getName() + "is Pressed");
        src.setIcon(new ImageIcon("./src/ShoesManager/images/Button Menu/150_50/" + src.getName() + " click.png"));

    }

    @Override
    public void mouseReleased(MouseEvent me) {
        JLabel src = (JLabel) me.getSource();
        System.out.println(src.getName() + "is Entered");
        src.setIcon(new ImageIcon("./src/ShoesManager/images/Button Menu/150_50/" + src.getName() + " hover.png"));

        // xử lý nút trở về
        if (src.getName().equals("Trở về")) {
            Home home;
            try {
                home = new Home();
                home.setVisible(true);
                setVisible(false);
            } catch (Exception e) {
                System.out.println("Lỗi");
            }
        }

        if (src.getName().equals("Khuyến mãi")) {
            try {
                KhuyenMai dm;
                dm = new KhuyenMai();
                dm.setVisible(true);
                setVisible(false);
            } catch (Exception ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


        if (src.getName().equals("Nhập hàng")) {
            try {
                PhieuNhap hd = new PhieuNhap();
                hd.setVisible(true);
                setVisible(false);
            } catch (Exception ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if (src.getName().equals("Hàng hóa")) {
            try {
                Sanpham hd = new Sanpham();
                hd.setVisible(true);
                setVisible(false);
            } catch (Exception ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

         if ( src.getName().equals("Hóa đơn") ) 
                try {
                    HoaDon hd;
                    hd = new HoaDon();
                    hd.setVisible(true);
                    setVisible(false);
                } catch (Exception ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }

        if (src.getName().equals("Excel")) {
            try {
                Excel hd;
                hd = new Excel();
                hd.setVisible(true);
                setVisible(false);
            } catch (Exception ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    @Override
    public void mouseEntered(MouseEvent me) {
        JLabel src = (JLabel) me.getSource();
        System.out.println(src.getName() + "is Entered");
        src.setIcon(new ImageIcon("./src/ShoesManager/images/Button Menu/150_50/" + src.getName() + " hover.png"));

    }

    @Override
    public void mouseExited(MouseEvent me) {
        JLabel src = (JLabel) me.getSource();
        System.out.println(src.getName() + "is Exited");
        src.setIcon(new ImageIcon("./src/ShoesManager/images/Button Menu/150_50/" + src.getName() + ".png"));

    }
}
